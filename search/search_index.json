{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u73b0\u4ee3CMake\u6559\u7a0b C++\u7684\u590d\u6742\u7cfb\u7edf\u6784\u5efa\u51e0\u4e4e\u90fd\u8981\u7528\u5230CMake,\u867d\u7136\u56fd\u5185\u5df2\u6709\u4e0d\u5c11\u5173\u4e8eCMake\u7684\u6559\u7a0b\uff0c\u4f46\u662f\u5f88\u591a\u7f3a\u5c11\u4e13\u4e1a\u6027\uff0c\u4e0d\u591f\u4e25\u8c28\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u73b0\u4ee3\u7684\u3001\u51c6\u786e\u7684CMake\u6559\u7a0b\u3002 \u9879\u76ee\u76ee\u524d\u6b63\u5728\u5f00\u53d1\u4e2d github\u4ed3\u5e93 \u4ec0\u4e48\u662fCMake\uff1f CMake \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u5f00\u6e90 \u6784\u5efa\u7cfb\u7edf \u751f\u6210\u5668(\u4e5f\u79f0\u4e3a \u5143\u6784\u5efa\u5de5\u5177 )\uff0c\u5b83\u80fd\u591f\u4e3a\u5176\u4ed6\u6784\u5efa\u5de5\u5177\uff08\u5982 Visual Studio\u3001Make\u3001Ninja\u3001Xcode\uff09\u751f\u6210\u914d\u7f6e\u6587\u4ef6\uff08\u4f8b\u5982 project.sln\u3001build.ninja\u3001Makefile\uff09 CMake \u7684\u7279\u8272\u529f\u80fd\u5305\u62ec\uff1a \u8de8\u5e73\u53f0\u652f\u6301\uff1a\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u8bd1\u5668\u4e4b\u95f4\u65e0\u7f1d\u5207\u6362\u3002 Target-centric approach(\u4ee5 \u76ee\u6807 \u4e3a\u4e2d\u5fc3)\uff1a\u80fd\u591f\u81ea\u52a8\u68c0\u6d4b\u6587\u4ef6\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u51cf\u5c11\u624b\u52a8\u64cd\u4f5c\u3002 \u591a\u79cd\u6784\u5efa\u7cfb\u7edf\u652f\u6301\uff1a\u652f\u6301\u751f\u6210 Visual Studio\u3001Make\u3001Ninja \u7b49\u591a\u79cd\u6784\u5efa\u5de5\u5177\u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u8de8\u5e73\u53f0\u5b89\u88c5\uff1a\u4f7f\u7528\u76f8\u540c\u7684\u547d\u4ee4\u96c6\uff0c\u53ef\u4ee5\u5728 Linux\u3001Windows \u548c Mac \u4e0a\u5b89\u88c5\u8f6f\u4ef6\u5305\u3002 \u652f\u6301\u8c03\u8bd5CMake\u4ee3\u7801(Visual Studio\u3001VScode): \u7b2c\u4e09\u65b9\u5de5\u5177 \u672c\u8d28\u4e0a\uff0c\u6784\u5efa\u7cfb\u7edf\u7684\u4efb\u52a1\u662f\u5c06\u6e90\u4ee3\u7801\u6587\u4ef6\uff08\u5982 .cpp\uff09\u8f6c\u6362\u4e3a\u53ef\u6267\u884c\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff08\u5982 .exe\u3001.lib\u3001.dll\uff09\u3002 \u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u4f7f\u7528\u7f16\u8bd1\u5668\uff1f \u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u901a\u8fc7\u547d\u4ee4\u884c\u8c03\u7528\u7f16\u8bd1\u5668\uff0c\u5982 gcc\u3001cl.exe\u3001clang++ \u7b49\u5de5\u5177\u3002\u4f46\u662f\uff0c\u5f53\u4ee3\u7801\u5e93\u53d8\u5f97\u590d\u6742\u65f6\uff0c\u4ec5\u9760\u547d\u4ee4\u884c\u4e0d\u591f\u7528\u4e86\u3002 \u5355\u6587\u4ef6\u7f16\u8bd1 \u5bf9\u4e8e\u5355\u4e2a\u6587\u4ef6\u7684\u7f16\u8bd1\uff0c\u53ea\u9700\u4e00\u6761\u547d\u4ee4\uff1a g++ -o main.exe main.cpp \u591a\u6587\u4ef6\u7f16\u8bd1 \u5f53\u6d89\u53ca\u591a\u4e2a\u6e90\u6587\u4ef6\u65f6\uff0c\u547d\u4ee4\u884c\u66f4\u590d\u6742\uff1a: # examples/step1 $ tree \u251c\u2500\u2500 foo.cpp \u251c\u2500\u2500 foo.h \u251c\u2500\u2500 main.cpp $ g++ -o foo.o -c foo.cpp $ g++ -o main.o -c main.cpp $ g++ -o step1 main.o foo.o $ ./step1 43 \u6b64\u5916\uff0c\u5982\u679c\u9700\u8981\u540c\u65f6\u6784\u5efa Debug \u548c Release \u7248\u672c\uff0c\u6216\u8005\u94fe\u63a5\u5916\u90e8\u5e93\uff0c\u547d\u4ee4\u884c\u7684\u590d\u6742\u5ea6\u5c06\u8fc5\u901f\u63d0\u5347\uff0c\u6548\u7387\u4e5f\u4f1a\u5927\u5927\u964d\u4f4e\u3002 \u6982\u5ff5\u89e3\u91ca \u6784\u5efa \u4e0e\u6784\u5efa\u7cfb\u7edf(buildsystem): \u7b80\u5355\u6765\u8bf4\uff0c\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u6784\u5efa\u662f\u5c06\u6e90\u4ee3\u7801\u6587\u4ef6\u201c\u7ffb\u8bd1\u201d\u4e3a\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u4ee3\u7801\u6587\u4ef6\u7684\u8fc7\u7a0b\uff1b\u800c\u6784\u5efa\u7cfb\u7edf\u662f\u4e00\u7ec4\u7528\u4e8e\u8f85\u52a9\u548c\u81ea\u52a8\u5316\u6784\u5efa\u8fc7\u7a0b\u7684\u8f6f\u4ef6\u5de5\u5177\u96c6\u5408\u3002 \u4ee5\u4e0b\u662f\u5e38\u89c1\u7684\u6784\u5efa\u7cfb\u7edf: Ninja build system cmake-buildsystem bazel.build Make \u3001 Maven \u548c Gradle \u5143\u6784\u5efa\u7cfb\u7edf(metabuildsystem): \u5143\u6784\u5efa\u7cfb\u7edf\u5373\u4e00\u4e2a\u751f\u6210\u5176\u4ed6\u6784\u5efa\u7cfb\u7edf\u7684\u6784\u5efa\u7cfb\u7edf\u3002\u5982: GYP (Generate Your Projects) CMake\u4e0e\u6784\u5efa\u7cfb\u7edf\u5173\u7cfb \u6784\u5efa\u7cfb\u7edf\uff1a\u5c06\u5f00\u53d1\u8005\u5199\u7684\u7684 \u6e90\u4ee3\u7801 \u8f6c\u6362\u4e3a\u53ef\u4f9b\u673a\u5668\u8bfb\u53d6\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u4f8b\u5982:\u6784\u5efa\u7cfb\u7edf\u53ef\u4ee5\u662fmake\u548c\u9879\u76ee\u7684Makefile(\u4e5f\u53ef\u4ee5\u662fIDE\u7684\u9879\u76ee\u6587\u4ef6)\u7ec4\u5408\u6210\u7684\u9879\u76ee\u6587\u4ef6\u3002 CMake\u901a\u8fc7generator\u8fd9\u4e00 \u540e\u7aef \u751f\u6210\u9002\u7528\u4e8e\u6bcf\u4e2a\u673a\u5668\u7684\u6784\u5efa\u7cfb\u7edf\u3002 \u751f\u6210\u6784\u5efa\u7cfb\u7edf\u9700\u8981\u4e09\u4e2a\u8981\u7d20\uff1a Source Tree(\u6e90\u4ee3\u7801\u76ee\u5f55):\u5305\u542b\u6e90\u4ee3\u7801\u7684\u9879\u76ee\u9876\u7ea7\u76ee\u5f55\uff0c\u4ece\u540d\u4e3aCMakeLists.txt\u6587\u4ef6\u5f00\u59cb\u3002 Build Tree(\u6784\u5efa\u6811\u76ee\u5f55)\uff1a\u5b58\u50a8\u6784\u5efa\u7cfb\u7edf\u7684\u9876\u7ea7\u76ee\u5f55\uff0cCMake\u4f1a\u751f\u6210\u6709CMakeCache.txt\u6765\u4e3a\u8be5\u76ee\u5f55\u6807\u8bb0\u5e76\u5b58\u50a8\u6784\u5efa\u4fe1\u606f\u3002(CMake\u652f\u6301\u5c06Build Tree\u7f6e\u4e8eSource Tree\u5185(\u6e90\u5185\u6784\u5efa)\uff0c\u4f46\u4e0d\u9f13\u52b1\u8fd9\u6837\u505a) \u751f\u6210\u5668: \u8fdb\u884cCMake\u914d\u7f6e\u65f6\u4f7f\u7528 -G \u9009\u9879\u6765\u6307\u5b9a\u751f\u6210\u5668(\u6216\u8005\u4e0d\u5199\uff0c\u4fdd\u6301\u9ed8\u8ba4) \u4e0b\u4e00\u7ae0 \u73af\u5883\u642d\u5efa \u8d5e\u52a9 \u5982\u679c\u4f60\u89c9\u5f97\u672c\u9879\u76ee\u5bf9\u4f60\u7684\u5e2e\u52a9\u5f88\u5927\uff0c\u53ef\u4ee5\u8bf7\u4f5c\u8005\u559d\u4e00\u676f\u5976\u8336\ud83c\udf81\ud83d\ude09\u3002","title":"\u73b0\u4ee3CMake\u6559\u7a0b"},{"location":"#cmake","text":"C++\u7684\u590d\u6742\u7cfb\u7edf\u6784\u5efa\u51e0\u4e4e\u90fd\u8981\u7528\u5230CMake,\u867d\u7136\u56fd\u5185\u5df2\u6709\u4e0d\u5c11\u5173\u4e8eCMake\u7684\u6559\u7a0b\uff0c\u4f46\u662f\u5f88\u591a\u7f3a\u5c11\u4e13\u4e1a\u6027\uff0c\u4e0d\u591f\u4e25\u8c28\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u73b0\u4ee3\u7684\u3001\u51c6\u786e\u7684CMake\u6559\u7a0b\u3002 \u9879\u76ee\u76ee\u524d\u6b63\u5728\u5f00\u53d1\u4e2d github\u4ed3\u5e93","title":"\u73b0\u4ee3CMake\u6559\u7a0b"},{"location":"#cmake_1","text":"CMake \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u5f00\u6e90 \u6784\u5efa\u7cfb\u7edf \u751f\u6210\u5668(\u4e5f\u79f0\u4e3a \u5143\u6784\u5efa\u5de5\u5177 )\uff0c\u5b83\u80fd\u591f\u4e3a\u5176\u4ed6\u6784\u5efa\u5de5\u5177\uff08\u5982 Visual Studio\u3001Make\u3001Ninja\u3001Xcode\uff09\u751f\u6210\u914d\u7f6e\u6587\u4ef6\uff08\u4f8b\u5982 project.sln\u3001build.ninja\u3001Makefile\uff09 CMake \u7684\u7279\u8272\u529f\u80fd\u5305\u62ec\uff1a \u8de8\u5e73\u53f0\u652f\u6301\uff1a\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u8bd1\u5668\u4e4b\u95f4\u65e0\u7f1d\u5207\u6362\u3002 Target-centric approach(\u4ee5 \u76ee\u6807 \u4e3a\u4e2d\u5fc3)\uff1a\u80fd\u591f\u81ea\u52a8\u68c0\u6d4b\u6587\u4ef6\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u51cf\u5c11\u624b\u52a8\u64cd\u4f5c\u3002 \u591a\u79cd\u6784\u5efa\u7cfb\u7edf\u652f\u6301\uff1a\u652f\u6301\u751f\u6210 Visual Studio\u3001Make\u3001Ninja \u7b49\u591a\u79cd\u6784\u5efa\u5de5\u5177\u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u8de8\u5e73\u53f0\u5b89\u88c5\uff1a\u4f7f\u7528\u76f8\u540c\u7684\u547d\u4ee4\u96c6\uff0c\u53ef\u4ee5\u5728 Linux\u3001Windows \u548c Mac \u4e0a\u5b89\u88c5\u8f6f\u4ef6\u5305\u3002 \u652f\u6301\u8c03\u8bd5CMake\u4ee3\u7801(Visual Studio\u3001VScode): \u7b2c\u4e09\u65b9\u5de5\u5177 \u672c\u8d28\u4e0a\uff0c\u6784\u5efa\u7cfb\u7edf\u7684\u4efb\u52a1\u662f\u5c06\u6e90\u4ee3\u7801\u6587\u4ef6\uff08\u5982 .cpp\uff09\u8f6c\u6362\u4e3a\u53ef\u6267\u884c\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff08\u5982 .exe\u3001.lib\u3001.dll\uff09\u3002","title":"\u4ec0\u4e48\u662fCMake\uff1f"},{"location":"#_1","text":"\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u901a\u8fc7\u547d\u4ee4\u884c\u8c03\u7528\u7f16\u8bd1\u5668\uff0c\u5982 gcc\u3001cl.exe\u3001clang++ \u7b49\u5de5\u5177\u3002\u4f46\u662f\uff0c\u5f53\u4ee3\u7801\u5e93\u53d8\u5f97\u590d\u6742\u65f6\uff0c\u4ec5\u9760\u547d\u4ee4\u884c\u4e0d\u591f\u7528\u4e86\u3002","title":"\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u4f7f\u7528\u7f16\u8bd1\u5668\uff1f"},{"location":"#_2","text":"\u5bf9\u4e8e\u5355\u4e2a\u6587\u4ef6\u7684\u7f16\u8bd1\uff0c\u53ea\u9700\u4e00\u6761\u547d\u4ee4\uff1a g++ -o main.exe main.cpp","title":"\u5355\u6587\u4ef6\u7f16\u8bd1"},{"location":"#_3","text":"\u5f53\u6d89\u53ca\u591a\u4e2a\u6e90\u6587\u4ef6\u65f6\uff0c\u547d\u4ee4\u884c\u66f4\u590d\u6742\uff1a: # examples/step1 $ tree \u251c\u2500\u2500 foo.cpp \u251c\u2500\u2500 foo.h \u251c\u2500\u2500 main.cpp $ g++ -o foo.o -c foo.cpp $ g++ -o main.o -c main.cpp $ g++ -o step1 main.o foo.o $ ./step1 43 \u6b64\u5916\uff0c\u5982\u679c\u9700\u8981\u540c\u65f6\u6784\u5efa Debug \u548c Release \u7248\u672c\uff0c\u6216\u8005\u94fe\u63a5\u5916\u90e8\u5e93\uff0c\u547d\u4ee4\u884c\u7684\u590d\u6742\u5ea6\u5c06\u8fc5\u901f\u63d0\u5347\uff0c\u6548\u7387\u4e5f\u4f1a\u5927\u5927\u964d\u4f4e\u3002","title":"\u591a\u6587\u4ef6\u7f16\u8bd1"},{"location":"#_4","text":"","title":"\u6982\u5ff5\u89e3\u91ca"},{"location":"#buildsystem","text":"\u7b80\u5355\u6765\u8bf4\uff0c\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u6784\u5efa\u662f\u5c06\u6e90\u4ee3\u7801\u6587\u4ef6\u201c\u7ffb\u8bd1\u201d\u4e3a\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u4ee3\u7801\u6587\u4ef6\u7684\u8fc7\u7a0b\uff1b\u800c\u6784\u5efa\u7cfb\u7edf\u662f\u4e00\u7ec4\u7528\u4e8e\u8f85\u52a9\u548c\u81ea\u52a8\u5316\u6784\u5efa\u8fc7\u7a0b\u7684\u8f6f\u4ef6\u5de5\u5177\u96c6\u5408\u3002 \u4ee5\u4e0b\u662f\u5e38\u89c1\u7684\u6784\u5efa\u7cfb\u7edf: Ninja build system cmake-buildsystem bazel.build Make \u3001 Maven \u548c Gradle","title":"\u6784\u5efa\u4e0e\u6784\u5efa\u7cfb\u7edf(buildsystem):"},{"location":"#metabuildsystem","text":"\u5143\u6784\u5efa\u7cfb\u7edf\u5373\u4e00\u4e2a\u751f\u6210\u5176\u4ed6\u6784\u5efa\u7cfb\u7edf\u7684\u6784\u5efa\u7cfb\u7edf\u3002\u5982: GYP (Generate Your Projects)","title":"\u5143\u6784\u5efa\u7cfb\u7edf(metabuildsystem):"},{"location":"#cmake_2","text":"\u6784\u5efa\u7cfb\u7edf\uff1a\u5c06\u5f00\u53d1\u8005\u5199\u7684\u7684 \u6e90\u4ee3\u7801 \u8f6c\u6362\u4e3a\u53ef\u4f9b\u673a\u5668\u8bfb\u53d6\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u4f8b\u5982:\u6784\u5efa\u7cfb\u7edf\u53ef\u4ee5\u662fmake\u548c\u9879\u76ee\u7684Makefile(\u4e5f\u53ef\u4ee5\u662fIDE\u7684\u9879\u76ee\u6587\u4ef6)\u7ec4\u5408\u6210\u7684\u9879\u76ee\u6587\u4ef6\u3002 CMake\u901a\u8fc7generator\u8fd9\u4e00 \u540e\u7aef \u751f\u6210\u9002\u7528\u4e8e\u6bcf\u4e2a\u673a\u5668\u7684\u6784\u5efa\u7cfb\u7edf\u3002 \u751f\u6210\u6784\u5efa\u7cfb\u7edf\u9700\u8981\u4e09\u4e2a\u8981\u7d20\uff1a Source Tree(\u6e90\u4ee3\u7801\u76ee\u5f55):\u5305\u542b\u6e90\u4ee3\u7801\u7684\u9879\u76ee\u9876\u7ea7\u76ee\u5f55\uff0c\u4ece\u540d\u4e3aCMakeLists.txt\u6587\u4ef6\u5f00\u59cb\u3002 Build Tree(\u6784\u5efa\u6811\u76ee\u5f55)\uff1a\u5b58\u50a8\u6784\u5efa\u7cfb\u7edf\u7684\u9876\u7ea7\u76ee\u5f55\uff0cCMake\u4f1a\u751f\u6210\u6709CMakeCache.txt\u6765\u4e3a\u8be5\u76ee\u5f55\u6807\u8bb0\u5e76\u5b58\u50a8\u6784\u5efa\u4fe1\u606f\u3002(CMake\u652f\u6301\u5c06Build Tree\u7f6e\u4e8eSource Tree\u5185(\u6e90\u5185\u6784\u5efa)\uff0c\u4f46\u4e0d\u9f13\u52b1\u8fd9\u6837\u505a) \u751f\u6210\u5668: \u8fdb\u884cCMake\u914d\u7f6e\u65f6\u4f7f\u7528 -G \u9009\u9879\u6765\u6307\u5b9a\u751f\u6210\u5668(\u6216\u8005\u4e0d\u5199\uff0c\u4fdd\u6301\u9ed8\u8ba4)","title":"CMake\u4e0e\u6784\u5efa\u7cfb\u7edf\u5173\u7cfb"},{"location":"#_5","text":"","title":"\u4e0b\u4e00\u7ae0\u73af\u5883\u642d\u5efa"},{"location":"#_6","text":"\u5982\u679c\u4f60\u89c9\u5f97\u672c\u9879\u76ee\u5bf9\u4f60\u7684\u5e2e\u52a9\u5f88\u5927\uff0c\u53ef\u4ee5\u8bf7\u4f5c\u8005\u559d\u4e00\u676f\u5976\u8336\ud83c\udf81\ud83d\ude09\u3002","title":"\u8d5e\u52a9"},{"location":"CMakePresets/","text":"CMakePresets.json CMake \u7528\u6237\u7ecf\u5e38\u9762\u4e34\u7684\u4e00\u4e2a\u95ee\u9898\u5982\u4f55\u5176\u4ed6\u4eba\u5171\u4eab\u914d\u7f6e(\u53ef\u80fd\u9700\u8981\u5199run.sh run.ps1 run.bat)\u3002 \u81eaCMake 3.19\u8d77\u652f\u6301\u7528json\u914d\u7f6e\u5e76\u8fd0\u884c\u9879\u76ee\uff0cCMake \u4e3b\u8981\u652f\u6301\u4e24\u4e2a\u6587\u4ef6CMakePresets.json\u548cCMakeUserPresets.json(\u8981\u6c42\u4f4d\u4e8e\u9879\u76ee\u6839\u76ee\u5f55,\u4f7f\u7528preset\u6784\u5efa\u5219\u5fc5\u987b\u81f3\u5c11\u5b58\u5728\u4e00\u4e2apreset\uff09\u3002 \u4e24\u4e2apreset.json\u6ca1\u6709\u5185\u5bb9\u5dee\u5f02\u3002CMakePresets.json\u662f\u9762\u5411\u6240\u6709\u7528\u6237\u7684(\u7406\u5e94\u63d0\u4ea4\u5230git)\uff0cCMakeUserPresets.json\u5e94\u6dfb\u52a0\u5230.gitignore \u5177\u4f53\u6848\u4f8b \u51c6\u5907\u6e90\u4ee3\u7801\u4e0e\u914d\u7f6e\u6587\u4ef6 \u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a $ tree . \u251c\u2500\u2500 CMakeLists.txt \u251c\u2500\u2500 CMakePresets.json \u2514\u2500\u2500 main.cpp \u4e3b\u8981\u770bCMakePresets.json(example/step4)\u5927\u6982\u5982\u4e0b\uff1a { \"version\": 9, \"configurePresets\": [ { \"name\": \"config-default\", \"description\": \"Default configuration\", \"generator\": \"Ninja\", \"binaryDir\": \"${sourceDir}/build/default\", \"cacheVariables\": { \"CMAKE_BUILD_TYPE\": \"Debug\", \"CMAKE_INSTALL_PREFIX\": \"${sourceDir}/install\" } }, { \"name\": \"config-release\", \"description\": \"Release configuration\", \"generator\": \"Ninja\", \"binaryDir\": \"${sourceDir}/build/release\", \"cacheVariables\": { \"CMAKE_BUILD_TYPE\": \"Release\", \"CMAKE_INSTALL_PREFIX\": \"${sourceDir}/release-install\" } } ], \"buildPresets\": [ { \"name\": \"build-default\", \"configurePreset\": \"config-default\", \"jobs\": 8 }, { \"name\": \"build-release\", \"configurePreset\": \"config-release\", \"jobs\": 8 } ] } \u8fd0\u884c: \u6309\u7167\u901a\u5e38\u7684cmake\u9879\u76ee\u6784\u5efa\u6b65\u9aa4\uff0c\u5148\u914d\u7f6e\uff0c\u540e\u6784\u5efa\u3002 $ cmake --list-presets # \u8f93\u51fa\u770b\u662f\u5426cmakeprest\u683c\u5f0f\u65e0\u8bef Available configure presets: \"config-default\" \"config-release\" $ cmake --preset config-default # \u9009\u62e9\u914d\u7f6e`config-default`,\u751f\u6210\"binaryDir\"\u4e2d\u6307\u5b9a\u7684\u76ee\u5f55build/default $ cmake --build --list-presets # \u8f93\u51fa\u53ef\u7528\u7684build presets(\u53ef\u9009) Available build presets: \"build-default\" \"build-release\" $ cmake --build --preset build-default # \u6267\u884c\u6784\u5efa,\u751f\u6210build/default/cmake_preset\u53ef\u6267\u884c\u7a0b\u5e8f CMakePresets.json \u5177\u4f53\u53c2\u6570: \u8fd9\u91cc\u7684CMakePresets.json\u53c2\u6570\u975e\u5e38\u7b80\u5355\uff0c\u662f\u5b8c\u5168\u53ef\u4ee5\u5bf9\u5e94\u5230\u5177\u4f53\u7684cmake\u547d\u4ee4\u4e0a\u3002 \u914d\u7f6e\u9636\u6bb5\u53c2\u6570: generator\u5bf9\u5e94-G Ninja binaryDir\u5bf9\u5e94-B ./build/default CMAKE_BUILD_TYPE\u5bf9\u5e94 -D CMAKE_BUILD_TYPE=Debug CMAKE_INSTALL_PREFIX\u5bf9\u5e94 -D CMAKE_INSTALL_PREFIX=./install \u6784\u5efa\u9636\u6bb5\u53c2\u6570\uff1a jobs\u5bf9\u5e94 -j/--parallel 8 cmakepreset\u590d\u7528 CMakeUserPresets.json\u53ef\u4ee5\u4f7f\u7528\u6587\u4ef6\u7684include\u5b57\u6bb5\u5305\u542b\u5176\u4ed6\u6587\u4ef6\u3002\u8fd9\u4e9b\u6587\u4ef6\u6240\u5305\u542b\u7684\u6587\u4ef6\u8fd8\u53ef\u4ee5\u5305\u542b\u5176\u4ed6\u6587\u4ef6\u3002\u5982\u679cCMakePresets.json\u548c CMakeUserPresets.json\u90fd\u5b58\u5728\uff0c CMakeUserPresets.json \u5728\u683c\u5f0f\u7684\u6240\u6709\u7248\u672c\u4e2d\u9690\u5f0f\u5305\u542bCMakePresets.json \uff0c\u5373\u4f7f\u6ca1\u6709include\u5b57\u6bb5\u3002 \u5177\u4f53\u4f8b\u5b50\uff1a \u4f8b\u5b50\u6839\u636e\u4e0a\u9762\u7684\u6848\u4f8b\uff0c\u65b0\u589e\u4e00\u4e2aCMakeUserPresets.json { \"version\": 9, \"configurePresets\": [ { \"inherits\": \"config-default\", \"name\": \"myconfig\", \"cacheVariables\": { \"CMAKE_BUILD_TYPE\": \"Debug\", \"CMAKE_INSTALL_PREFIX\": \"${sourceDir}/myinstall\" } } ] } $ cmake --list-presets # CMakeUserPresets.json\u9690\u5f0f\u5305\u542bCMakePresets.json Available configure presets: \"myconfig\" \"config-default\" \"config-release\" $ cmake --build --list-presets Available build presets: \"build-default\" \"build-release\" \u5b8c\u6574\u7684 CMakeLists.txt \u548c main.cpp \u793a\u4f8b\u4ee3\u7801(examples/step4) cmake_minimum_required(VERSION 3.20) set(CMAKE_EXPORT_COMPILE_COMMANDS TRUE) # \u521b\u5efa\u53ef\u6267\u884c\u6587\u4ef6 add_executable(find_lib_demo main.cpp) # \u67e5\u627e SDL2 \u5e93 find_package(SDL2) # \u7ed9find_lib_demo\u8fd9\u4e2a\u76ee\u6807\u94fe\u63a5 SDL2 \u5e93 target_link_libraries(find_lib_demo SDL2::SDL2) #include <SDL.h> #include <iostream> int main(int argc, char* args[]) { // \u521d\u59cb\u5316SDL if (SDL_Init(SDL_INIT_VIDEO) < 0) { std::cerr < < \"SDL could not initialize! SDL_Error: \" < < SDL_GetError() < < std::endl; return -1; } // \u521b\u5efa\u7a97\u53e3 SDL_Window* window = SDL_CreateWindow(\"SDL Demo\", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, 640, 480, SDL_WINDOW_SHOWN); if (window == nullptr) { std::cerr < < \"Window could not be created! SDL_Error: \" < < SDL_GetError() < < std::endl; SDL_Quit(); return -1; } // \u521b\u5efa\u6e32\u67d3\u5668 SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED); if (renderer == nullptr) { std::cerr < < \"Renderer could not be created! SDL_Error: \" < < SDL_GetError() < < std::endl; SDL_DestroyWindow(window); SDL_Quit(); return -1; } // \u8bbe\u7f6e\u7ed8\u5236\u989c\u8272\u4e3a\u84dd\u8272 SDL_SetRenderDrawColor(renderer, 0, 0, 255, 255); // \u6e05\u9664\u5c4f\u5e55 SDL_RenderClear(renderer); // \u7ed8\u5236\u4e00\u4e2a\u77e9\u5f62 SDL_Rect rect = {100, 100, 200, 150}; SDL_RenderFillRect(renderer, &rect); // \u66f4\u65b0\u5c4f\u5e55\u663e\u793a SDL_RenderPresent(renderer); // \u4e8b\u4ef6\u5904\u7406 bool quit = false; SDL_Event e; while (!quit) { while (SDL_PollEvent(&e) != 0) { if (e.type == SDL_QUIT) { quit = true; } } } // \u91ca\u653e\u8d44\u6e90\u5e76\u9000\u51fa SDL_DestroyRenderer(renderer); SDL_DestroyWindow(window); SDL_Quit(); return 0; } \u4e0b\u4e00\u7ae0 \u8bbe\u7f6e\u76ee\u6807\u5c5e\u6027","title":"CMakePresets.json"},{"location":"CMakePresets/#cmakepresetsjson","text":"CMake \u7528\u6237\u7ecf\u5e38\u9762\u4e34\u7684\u4e00\u4e2a\u95ee\u9898\u5982\u4f55\u5176\u4ed6\u4eba\u5171\u4eab\u914d\u7f6e(\u53ef\u80fd\u9700\u8981\u5199run.sh run.ps1 run.bat)\u3002 \u81eaCMake 3.19\u8d77\u652f\u6301\u7528json\u914d\u7f6e\u5e76\u8fd0\u884c\u9879\u76ee\uff0cCMake \u4e3b\u8981\u652f\u6301\u4e24\u4e2a\u6587\u4ef6CMakePresets.json\u548cCMakeUserPresets.json(\u8981\u6c42\u4f4d\u4e8e\u9879\u76ee\u6839\u76ee\u5f55,\u4f7f\u7528preset\u6784\u5efa\u5219\u5fc5\u987b\u81f3\u5c11\u5b58\u5728\u4e00\u4e2apreset\uff09\u3002 \u4e24\u4e2apreset.json\u6ca1\u6709\u5185\u5bb9\u5dee\u5f02\u3002CMakePresets.json\u662f\u9762\u5411\u6240\u6709\u7528\u6237\u7684(\u7406\u5e94\u63d0\u4ea4\u5230git)\uff0cCMakeUserPresets.json\u5e94\u6dfb\u52a0\u5230.gitignore","title":"CMakePresets.json"},{"location":"CMakePresets/#_1","text":"","title":"\u5177\u4f53\u6848\u4f8b"},{"location":"CMakePresets/#_2","text":"\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a $ tree . \u251c\u2500\u2500 CMakeLists.txt \u251c\u2500\u2500 CMakePresets.json \u2514\u2500\u2500 main.cpp \u4e3b\u8981\u770bCMakePresets.json(example/step4)\u5927\u6982\u5982\u4e0b\uff1a { \"version\": 9, \"configurePresets\": [ { \"name\": \"config-default\", \"description\": \"Default configuration\", \"generator\": \"Ninja\", \"binaryDir\": \"${sourceDir}/build/default\", \"cacheVariables\": { \"CMAKE_BUILD_TYPE\": \"Debug\", \"CMAKE_INSTALL_PREFIX\": \"${sourceDir}/install\" } }, { \"name\": \"config-release\", \"description\": \"Release configuration\", \"generator\": \"Ninja\", \"binaryDir\": \"${sourceDir}/build/release\", \"cacheVariables\": { \"CMAKE_BUILD_TYPE\": \"Release\", \"CMAKE_INSTALL_PREFIX\": \"${sourceDir}/release-install\" } } ], \"buildPresets\": [ { \"name\": \"build-default\", \"configurePreset\": \"config-default\", \"jobs\": 8 }, { \"name\": \"build-release\", \"configurePreset\": \"config-release\", \"jobs\": 8 } ] }","title":"\u51c6\u5907\u6e90\u4ee3\u7801\u4e0e\u914d\u7f6e\u6587\u4ef6"},{"location":"CMakePresets/#_3","text":"\u6309\u7167\u901a\u5e38\u7684cmake\u9879\u76ee\u6784\u5efa\u6b65\u9aa4\uff0c\u5148\u914d\u7f6e\uff0c\u540e\u6784\u5efa\u3002 $ cmake --list-presets # \u8f93\u51fa\u770b\u662f\u5426cmakeprest\u683c\u5f0f\u65e0\u8bef Available configure presets: \"config-default\" \"config-release\" $ cmake --preset config-default # \u9009\u62e9\u914d\u7f6e`config-default`,\u751f\u6210\"binaryDir\"\u4e2d\u6307\u5b9a\u7684\u76ee\u5f55build/default $ cmake --build --list-presets # \u8f93\u51fa\u53ef\u7528\u7684build presets(\u53ef\u9009) Available build presets: \"build-default\" \"build-release\" $ cmake --build --preset build-default # \u6267\u884c\u6784\u5efa,\u751f\u6210build/default/cmake_preset\u53ef\u6267\u884c\u7a0b\u5e8f","title":"\u8fd0\u884c:"},{"location":"CMakePresets/#cmakepresetsjson_1","text":"\u8fd9\u91cc\u7684CMakePresets.json\u53c2\u6570\u975e\u5e38\u7b80\u5355\uff0c\u662f\u5b8c\u5168\u53ef\u4ee5\u5bf9\u5e94\u5230\u5177\u4f53\u7684cmake\u547d\u4ee4\u4e0a\u3002 \u914d\u7f6e\u9636\u6bb5\u53c2\u6570: generator\u5bf9\u5e94-G Ninja binaryDir\u5bf9\u5e94-B ./build/default CMAKE_BUILD_TYPE\u5bf9\u5e94 -D CMAKE_BUILD_TYPE=Debug CMAKE_INSTALL_PREFIX\u5bf9\u5e94 -D CMAKE_INSTALL_PREFIX=./install \u6784\u5efa\u9636\u6bb5\u53c2\u6570\uff1a jobs\u5bf9\u5e94 -j/--parallel 8","title":"CMakePresets.json \u5177\u4f53\u53c2\u6570:"},{"location":"CMakePresets/#cmakepreset","text":"CMakeUserPresets.json\u53ef\u4ee5\u4f7f\u7528\u6587\u4ef6\u7684include\u5b57\u6bb5\u5305\u542b\u5176\u4ed6\u6587\u4ef6\u3002\u8fd9\u4e9b\u6587\u4ef6\u6240\u5305\u542b\u7684\u6587\u4ef6\u8fd8\u53ef\u4ee5\u5305\u542b\u5176\u4ed6\u6587\u4ef6\u3002\u5982\u679cCMakePresets.json\u548c CMakeUserPresets.json\u90fd\u5b58\u5728\uff0c CMakeUserPresets.json \u5728\u683c\u5f0f\u7684\u6240\u6709\u7248\u672c\u4e2d\u9690\u5f0f\u5305\u542bCMakePresets.json \uff0c\u5373\u4f7f\u6ca1\u6709include\u5b57\u6bb5\u3002 \u5177\u4f53\u4f8b\u5b50\uff1a \u4f8b\u5b50\u6839\u636e\u4e0a\u9762\u7684\u6848\u4f8b\uff0c\u65b0\u589e\u4e00\u4e2aCMakeUserPresets.json { \"version\": 9, \"configurePresets\": [ { \"inherits\": \"config-default\", \"name\": \"myconfig\", \"cacheVariables\": { \"CMAKE_BUILD_TYPE\": \"Debug\", \"CMAKE_INSTALL_PREFIX\": \"${sourceDir}/myinstall\" } } ] } $ cmake --list-presets # CMakeUserPresets.json\u9690\u5f0f\u5305\u542bCMakePresets.json Available configure presets: \"myconfig\" \"config-default\" \"config-release\" $ cmake --build --list-presets Available build presets: \"build-default\" \"build-release\" \u5b8c\u6574\u7684 CMakeLists.txt \u548c main.cpp \u793a\u4f8b\u4ee3\u7801(examples/step4) cmake_minimum_required(VERSION 3.20) set(CMAKE_EXPORT_COMPILE_COMMANDS TRUE) # \u521b\u5efa\u53ef\u6267\u884c\u6587\u4ef6 add_executable(find_lib_demo main.cpp) # \u67e5\u627e SDL2 \u5e93 find_package(SDL2) # \u7ed9find_lib_demo\u8fd9\u4e2a\u76ee\u6807\u94fe\u63a5 SDL2 \u5e93 target_link_libraries(find_lib_demo SDL2::SDL2) #include <SDL.h> #include <iostream> int main(int argc, char* args[]) { // \u521d\u59cb\u5316SDL if (SDL_Init(SDL_INIT_VIDEO) < 0) { std::cerr < < \"SDL could not initialize! SDL_Error: \" < < SDL_GetError() < < std::endl; return -1; } // \u521b\u5efa\u7a97\u53e3 SDL_Window* window = SDL_CreateWindow(\"SDL Demo\", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, 640, 480, SDL_WINDOW_SHOWN); if (window == nullptr) { std::cerr < < \"Window could not be created! SDL_Error: \" < < SDL_GetError() < < std::endl; SDL_Quit(); return -1; } // \u521b\u5efa\u6e32\u67d3\u5668 SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED); if (renderer == nullptr) { std::cerr < < \"Renderer could not be created! SDL_Error: \" < < SDL_GetError() < < std::endl; SDL_DestroyWindow(window); SDL_Quit(); return -1; } // \u8bbe\u7f6e\u7ed8\u5236\u989c\u8272\u4e3a\u84dd\u8272 SDL_SetRenderDrawColor(renderer, 0, 0, 255, 255); // \u6e05\u9664\u5c4f\u5e55 SDL_RenderClear(renderer); // \u7ed8\u5236\u4e00\u4e2a\u77e9\u5f62 SDL_Rect rect = {100, 100, 200, 150}; SDL_RenderFillRect(renderer, &rect); // \u66f4\u65b0\u5c4f\u5e55\u663e\u793a SDL_RenderPresent(renderer); // \u4e8b\u4ef6\u5904\u7406 bool quit = false; SDL_Event e; while (!quit) { while (SDL_PollEvent(&e) != 0) { if (e.type == SDL_QUIT) { quit = true; } } } // \u91ca\u653e\u8d44\u6e90\u5e76\u9000\u51fa SDL_DestroyRenderer(renderer); SDL_DestroyWindow(window); SDL_Quit(); return 0; } \u4e0b\u4e00\u7ae0 \u8bbe\u7f6e\u76ee\u6807\u5c5e\u6027","title":"cmakepreset\u590d\u7528"},{"location":"CMake%E5%88%B6%E4%BD%9C%E5%BA%93/","text":"cmake\u5236\u4f5c\u5e93","title":"cmake\u5236\u4f5c\u5e93"},{"location":"CMake%E5%88%B6%E4%BD%9C%E5%BA%93/#cmake","text":"","title":"cmake\u5236\u4f5c\u5e93"},{"location":"QtCMake%E9%A1%B9%E7%9B%AE/","text":"QtCMake\u9879\u76ee","title":"QtCMake\u9879\u76ee"},{"location":"QtCMake%E9%A1%B9%E7%9B%AE/#qtcmake","text":"","title":"QtCMake\u9879\u76ee"},{"location":"about/","text":"hello about","title":"\u5173\u4e8e"},{"location":"about/#hello-about","text":"","title":"hello about"},{"location":"compilationlinking/","text":"","title":"Compilationlinking"},{"location":"find_package%E6%A1%88%E4%BE%8B/","text":"find_package\u6848\u4f8b \u8fd9\u4e00\u7ae0\u662f\u4e00\u4e2a find_package \u6848\u4f8b \u7684\u6848\u4f8b\uff0c\u5927\u90e8\u5206\u521d\u5b66\u8005\u4f1a\u7ecf\u5e38\u56e0\u4e3a\u8fd9\u4e2a\u547d\u4ee4\u627e\u4e0d\u5230\u5e93\u800c\u62a5\u9519(\u660e\u660e\u522b\u4eba\u80fd\u8dd1\ud83e\udd14)\uff1a 1. find_package\u57fa\u7840\u6848\u4f8b \u793a\u4f8b\uff1a SDL2 \u5305\u5e76\u6784\u5efa\u4e00\u4e2asdl2_demo\u3002 cmake_minimum_required(VERSION 3.20) # \u751f\u6210<build_dir>/compile_commands.json set(CMAKE_EXPORT_COMPILE_COMMANDS TRUE) # SDL2_DIR \u5fc5\u987b\u6307\u5b9a\u5230.cmake\u6240\u5728\u8def\u5f84 set(SDL2_DIR /home/awe/Desktop/clone/learn_SDL2/3rd/install/lib64/cmake/SDL2) # SDL2_ROOT \u6307\u5b9a\u5230install\u65e2\u53ef\uff0c`lib64/cmake/SDL2`\u4f1a\u81ea\u52a8\u5339\u914d # set(SDL2_ROOT /home/awe/Desktop/clone/learn_SDL2/3rd/install) # CMAKE_PREFIX_PATH\u540cSDL2_ROOT\u90fd\u6309\u7167\u524d\u7f00\u641c\u7d22\u89c4\u5219\u6a21\u7cca\u641c\u7d22 # set(CMAKE_PREFIX_PATH /home/awe/Desktop/clone/learn_SDL2/3rd/install) project(MinimalCMakeProject) add_executable(sdl2_demo main.cpp) # \u67e5\u627eSDL2\u5e93 find_package(SDL2) target_link_libraries(sdl2_demo SDL2::SDL2) 2. find_package\u8be6\u89e3 \u9ed8\u8ba4\u641c\u7d22\u6a21\u5f0f find_package \u57fa\u672c\u8bed\u6cd5\uff1a find_package(<PackageName> [<version>] [REQUIRED] [COMPONENTS <components>...]) find_package \u627e\u5230\u4e00\u4e2a\u5305\uff08\u901a\u5e38\u7531\u9879\u76ee\u5916\u90e8\u7684\u4e1c\u897f\u63d0\u4f9b\uff09\uff0c\u5e76\u52a0\u8f7d\u5176\u8fd9\u4e2a\u5305\u3002 find_package \u8be5\u547d\u4ee4\u6709\u51e0\u79cd\u641c\u7d22\u5305\u7684\u6a21\u5f0f,\u9ed8\u8ba4\u5148\u6309\u7167\u6a21\u5757\u6a21\u5f0f\u641c\u7d22\uff0c\u540e\u6309\u7167\u914d\u7f6e\u6a21\u5f0f\u641c\u7d22\uff1a \u6a21\u5757\u6a21\u5f0f\uff08Module mode\uff09\uff1a \u5728\u6b64\u6a21\u5f0f\u4e0b\uff0cCMake \u641c\u7d22\u540d\u4e3a Find<PackageName>.cmake \u7684\u6587\u4ef6\uff0c\u9996\u5148\u5728 CMAKE_MODULE_PATH \u4e2d\u5217\u51fa\u7684\u4f4d\u7f6e\u4e2d\u67e5\u627e\uff0c\u5982\u679c\u627e\u5230\u8be5\u6587\u4ef6\uff0c\u5219\u7531 CMake \u8bfb\u53d6\u5e76\u5904\u7406\u8be5\u6587\u4ef6\u3002 \u914d\u7f6e\u6a21\u5f0f\uff08Config Mode\uff09: \u5728\u6b64\u6a21\u5f0f\u4e0b\uff0cCMake \u641c\u7d22\u540d\u4e3a\u7684\u6587\u4ef6 <lowercasePackageName>-config.cmake \u3001<PackageName>Config.cmake\uff0c\u5982\u679c\u6307\u5b9a\u4e86 \u9009\u9879\u8fd8\u4f1a\u5148\u67e5\u627e <lowercasePackageName>-config-version.cmake\u3001<PackageName>ConfigVersion.cmake\u3002 \u6307\u5b9a\u641c\u7d22\u6a21\u5f0f find_package \u652f\u6301\u901a\u8fc7 MODULE|CONFIG \u9009\u9879\u6765\u9009\u62e9\u67d0\u4e00\u79cd\u641c\u7d22\u6a21\u5f0f find_package(<PackageName> [...] [MODULE|CONFIG]) find_package \u67e5\u627e\u4f1a\u6839\u636e\u4ee5\u4e0b\u53d8\u91cf\u67e5\u627e\u4e0a\u6587\u5217\u51fa\u7684.cmake\u6587\u4ef6(\u5e38\u7528\u7684)\uff1a CMAKE_PREFIX_PATH\u3001<PackageName>_DIR\u3001<PackageName>_ROOT\u3001CMAKE_INSTALL_PREFIX(\u4e0d\u63a8\u8350)\u3001\u73af\u5883\u53d8\u91cfPATH\u3002 \u6839\u636e\u524d\u7f00\u641c\u7d22 \u4e00\u822c\u662f\u8bbe\u7f6e CMAKE_PREFIX_PATH \uff0c\u4e3b\u8981\u9760\u5b83\u4f5c\u4e3a\u641c\u7d22 \u524d\u7f00 \uff0c\u5e76\u6309\u7167\u641c\u7d22\u89c4\u5219\u627e\u5230.cmake\u6587\u4ef6\uff1b\u4e0d\u8fc7\u5bf9\u4e8e<PackageName>_DIR\u662f\u5fc5\u987b\u6307\u5b9a\u5230.cmake\u6240\u5728\u76ee\u5f55\u7684\u3002 \u641c\u7d22 \u524d\u7f00 \u7684\u641c\u7d22\u89c4\u5219( \u5b8c\u6574\u641c\u7d22\u89c4\u5219\u53c2\u8003 )\uff1a \u9002\u7528\u4e8eunix\u7cfb\u7684\u7ea6\u5b9a: <prefix>/(lib/<arch>|lib*|share)/cmake/<name>*/ <prefix>/(lib/<arch>|lib*|share)/<name>*/ <prefix>/(lib/<arch>|lib*|share)/<name>*/(cmake|CMake)/ \u9002\u7528\u4e8eunix/windows\u7684\u7ea6\u5b9a\uff1a <prefix>/<name>*/(lib/<arch>|lib*|share)/cmake/<name>*/ <prefix>/<name>*/(lib/<arch>|lib*|share)/<name>*/ <prefix>/<name>*/(lib/<arch>|lib*|share)/<name>*/(cmake|CMake)/ \u9002\u7528\u4e8emac\u7684\u7ea6\u5b9a\uff1a <prefix>/<name>.framework/Resources/CMake/ <prefix>/<name>.framework/Versions/*/Resources/ <prefix>/<name>.framework/Versions/*/Resources/CMake/ \u5b8c\u6574\u7684 CMakeLists.txt \u548c main.cpp \u793a\u4f8b\u4ee3\u7801(examples/step3) cmake_minimum_required(VERSION 3.20) set(CMAKE_EXPORT_COMPILE_COMMANDS TRUE) # \u521b\u5efa\u53ef\u6267\u884c\u6587\u4ef6 add_executable(find_lib_demo main.cpp) # \u67e5\u627e SDL2 \u5e93 find_package(SDL2) # \u7ed9find_lib_demo\u8fd9\u4e2a\u76ee\u6807\u94fe\u63a5 SDL2 \u5e93 target_link_libraries(find_lib_demo SDL2::SDL2) #include <SDL.h> #include <iostream> int main(int argc, char* args[]) { // \u521d\u59cb\u5316SDL if (SDL_Init(SDL_INIT_VIDEO) < 0) { std::cerr < < \"SDL could not initialize! SDL_Error: \" < < SDL_GetError() < < std::endl; return -1; } // \u521b\u5efa\u7a97\u53e3 SDL_Window* window = SDL_CreateWindow(\"SDL Demo\", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, 640, 480, SDL_WINDOW_SHOWN); if (window == nullptr) { std::cerr < < \"Window could not be created! SDL_Error: \" < < SDL_GetError() < < std::endl; SDL_Quit(); return -1; } // \u521b\u5efa\u6e32\u67d3\u5668 SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED); if (renderer == nullptr) { std::cerr < < \"Renderer could not be created! SDL_Error: \" < < SDL_GetError() < < std::endl; SDL_DestroyWindow(window); SDL_Quit(); return -1; } // \u8bbe\u7f6e\u7ed8\u5236\u989c\u8272\u4e3a\u84dd\u8272 SDL_SetRenderDrawColor(renderer, 0, 0, 255, 255); // \u6e05\u9664\u5c4f\u5e55 SDL_RenderClear(renderer); // \u7ed8\u5236\u4e00\u4e2a\u77e9\u5f62 SDL_Rect rect = {100, 100, 200, 150}; SDL_RenderFillRect(renderer, &rect); // \u66f4\u65b0\u5c4f\u5e55\u663e\u793a SDL_RenderPresent(renderer); // \u4e8b\u4ef6\u5904\u7406 bool quit = false; SDL_Event e; while (!quit) { while (SDL_PollEvent(&e) != 0) { if (e.type == SDL_QUIT) { quit = true; } } } // \u91ca\u653e\u8d44\u6e90\u5e76\u9000\u51fa SDL_DestroyRenderer(renderer); SDL_DestroyWindow(window); SDL_Quit(); return 0; } \u4e0b\u4e00\u7ae0 CMakePresets.json\u6848\u4f8b","title":"find_package\u6848\u4f8b"},{"location":"find_package%E6%A1%88%E4%BE%8B/#find_package","text":"\u8fd9\u4e00\u7ae0\u662f\u4e00\u4e2a find_package \u6848\u4f8b \u7684\u6848\u4f8b\uff0c\u5927\u90e8\u5206\u521d\u5b66\u8005\u4f1a\u7ecf\u5e38\u56e0\u4e3a\u8fd9\u4e2a\u547d\u4ee4\u627e\u4e0d\u5230\u5e93\u800c\u62a5\u9519(\u660e\u660e\u522b\u4eba\u80fd\u8dd1\ud83e\udd14)\uff1a","title":"find_package\u6848\u4f8b"},{"location":"find_package%E6%A1%88%E4%BE%8B/#1-find_package","text":"\u793a\u4f8b\uff1a SDL2 \u5305\u5e76\u6784\u5efa\u4e00\u4e2asdl2_demo\u3002 cmake_minimum_required(VERSION 3.20) # \u751f\u6210<build_dir>/compile_commands.json set(CMAKE_EXPORT_COMPILE_COMMANDS TRUE) # SDL2_DIR \u5fc5\u987b\u6307\u5b9a\u5230.cmake\u6240\u5728\u8def\u5f84 set(SDL2_DIR /home/awe/Desktop/clone/learn_SDL2/3rd/install/lib64/cmake/SDL2) # SDL2_ROOT \u6307\u5b9a\u5230install\u65e2\u53ef\uff0c`lib64/cmake/SDL2`\u4f1a\u81ea\u52a8\u5339\u914d # set(SDL2_ROOT /home/awe/Desktop/clone/learn_SDL2/3rd/install) # CMAKE_PREFIX_PATH\u540cSDL2_ROOT\u90fd\u6309\u7167\u524d\u7f00\u641c\u7d22\u89c4\u5219\u6a21\u7cca\u641c\u7d22 # set(CMAKE_PREFIX_PATH /home/awe/Desktop/clone/learn_SDL2/3rd/install) project(MinimalCMakeProject) add_executable(sdl2_demo main.cpp) # \u67e5\u627eSDL2\u5e93 find_package(SDL2) target_link_libraries(sdl2_demo SDL2::SDL2)","title":"1. find_package\u57fa\u7840\u6848\u4f8b"},{"location":"find_package%E6%A1%88%E4%BE%8B/#2-find_package","text":"","title":"2. find_package\u8be6\u89e3"},{"location":"find_package%E6%A1%88%E4%BE%8B/#_1","text":"find_package \u57fa\u672c\u8bed\u6cd5\uff1a find_package(<PackageName> [<version>] [REQUIRED] [COMPONENTS <components>...]) find_package \u627e\u5230\u4e00\u4e2a\u5305\uff08\u901a\u5e38\u7531\u9879\u76ee\u5916\u90e8\u7684\u4e1c\u897f\u63d0\u4f9b\uff09\uff0c\u5e76\u52a0\u8f7d\u5176\u8fd9\u4e2a\u5305\u3002 find_package \u8be5\u547d\u4ee4\u6709\u51e0\u79cd\u641c\u7d22\u5305\u7684\u6a21\u5f0f,\u9ed8\u8ba4\u5148\u6309\u7167\u6a21\u5757\u6a21\u5f0f\u641c\u7d22\uff0c\u540e\u6309\u7167\u914d\u7f6e\u6a21\u5f0f\u641c\u7d22\uff1a \u6a21\u5757\u6a21\u5f0f\uff08Module mode\uff09\uff1a \u5728\u6b64\u6a21\u5f0f\u4e0b\uff0cCMake \u641c\u7d22\u540d\u4e3a Find<PackageName>.cmake \u7684\u6587\u4ef6\uff0c\u9996\u5148\u5728 CMAKE_MODULE_PATH \u4e2d\u5217\u51fa\u7684\u4f4d\u7f6e\u4e2d\u67e5\u627e\uff0c\u5982\u679c\u627e\u5230\u8be5\u6587\u4ef6\uff0c\u5219\u7531 CMake \u8bfb\u53d6\u5e76\u5904\u7406\u8be5\u6587\u4ef6\u3002 \u914d\u7f6e\u6a21\u5f0f\uff08Config Mode\uff09: \u5728\u6b64\u6a21\u5f0f\u4e0b\uff0cCMake \u641c\u7d22\u540d\u4e3a\u7684\u6587\u4ef6 <lowercasePackageName>-config.cmake \u3001<PackageName>Config.cmake\uff0c\u5982\u679c\u6307\u5b9a\u4e86 \u9009\u9879\u8fd8\u4f1a\u5148\u67e5\u627e <lowercasePackageName>-config-version.cmake\u3001<PackageName>ConfigVersion.cmake\u3002","title":"\u9ed8\u8ba4\u641c\u7d22\u6a21\u5f0f"},{"location":"find_package%E6%A1%88%E4%BE%8B/#_2","text":"find_package \u652f\u6301\u901a\u8fc7 MODULE|CONFIG \u9009\u9879\u6765\u9009\u62e9\u67d0\u4e00\u79cd\u641c\u7d22\u6a21\u5f0f find_package(<PackageName> [...] [MODULE|CONFIG]) find_package \u67e5\u627e\u4f1a\u6839\u636e\u4ee5\u4e0b\u53d8\u91cf\u67e5\u627e\u4e0a\u6587\u5217\u51fa\u7684.cmake\u6587\u4ef6(\u5e38\u7528\u7684)\uff1a CMAKE_PREFIX_PATH\u3001<PackageName>_DIR\u3001<PackageName>_ROOT\u3001CMAKE_INSTALL_PREFIX(\u4e0d\u63a8\u8350)\u3001\u73af\u5883\u53d8\u91cfPATH\u3002","title":"\u6307\u5b9a\u641c\u7d22\u6a21\u5f0f"},{"location":"find_package%E6%A1%88%E4%BE%8B/#_3","text":"\u4e00\u822c\u662f\u8bbe\u7f6e CMAKE_PREFIX_PATH \uff0c\u4e3b\u8981\u9760\u5b83\u4f5c\u4e3a\u641c\u7d22 \u524d\u7f00 \uff0c\u5e76\u6309\u7167\u641c\u7d22\u89c4\u5219\u627e\u5230.cmake\u6587\u4ef6\uff1b\u4e0d\u8fc7\u5bf9\u4e8e<PackageName>_DIR\u662f\u5fc5\u987b\u6307\u5b9a\u5230.cmake\u6240\u5728\u76ee\u5f55\u7684\u3002 \u641c\u7d22 \u524d\u7f00 \u7684\u641c\u7d22\u89c4\u5219( \u5b8c\u6574\u641c\u7d22\u89c4\u5219\u53c2\u8003 )\uff1a \u9002\u7528\u4e8eunix\u7cfb\u7684\u7ea6\u5b9a: <prefix>/(lib/<arch>|lib*|share)/cmake/<name>*/ <prefix>/(lib/<arch>|lib*|share)/<name>*/ <prefix>/(lib/<arch>|lib*|share)/<name>*/(cmake|CMake)/ \u9002\u7528\u4e8eunix/windows\u7684\u7ea6\u5b9a\uff1a <prefix>/<name>*/(lib/<arch>|lib*|share)/cmake/<name>*/ <prefix>/<name>*/(lib/<arch>|lib*|share)/<name>*/ <prefix>/<name>*/(lib/<arch>|lib*|share)/<name>*/(cmake|CMake)/ \u9002\u7528\u4e8emac\u7684\u7ea6\u5b9a\uff1a <prefix>/<name>.framework/Resources/CMake/ <prefix>/<name>.framework/Versions/*/Resources/ <prefix>/<name>.framework/Versions/*/Resources/CMake/ \u5b8c\u6574\u7684 CMakeLists.txt \u548c main.cpp \u793a\u4f8b\u4ee3\u7801(examples/step3) cmake_minimum_required(VERSION 3.20) set(CMAKE_EXPORT_COMPILE_COMMANDS TRUE) # \u521b\u5efa\u53ef\u6267\u884c\u6587\u4ef6 add_executable(find_lib_demo main.cpp) # \u67e5\u627e SDL2 \u5e93 find_package(SDL2) # \u7ed9find_lib_demo\u8fd9\u4e2a\u76ee\u6807\u94fe\u63a5 SDL2 \u5e93 target_link_libraries(find_lib_demo SDL2::SDL2) #include <SDL.h> #include <iostream> int main(int argc, char* args[]) { // \u521d\u59cb\u5316SDL if (SDL_Init(SDL_INIT_VIDEO) < 0) { std::cerr < < \"SDL could not initialize! SDL_Error: \" < < SDL_GetError() < < std::endl; return -1; } // \u521b\u5efa\u7a97\u53e3 SDL_Window* window = SDL_CreateWindow(\"SDL Demo\", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, 640, 480, SDL_WINDOW_SHOWN); if (window == nullptr) { std::cerr < < \"Window could not be created! SDL_Error: \" < < SDL_GetError() < < std::endl; SDL_Quit(); return -1; } // \u521b\u5efa\u6e32\u67d3\u5668 SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED); if (renderer == nullptr) { std::cerr < < \"Renderer could not be created! SDL_Error: \" < < SDL_GetError() < < std::endl; SDL_DestroyWindow(window); SDL_Quit(); return -1; } // \u8bbe\u7f6e\u7ed8\u5236\u989c\u8272\u4e3a\u84dd\u8272 SDL_SetRenderDrawColor(renderer, 0, 0, 255, 255); // \u6e05\u9664\u5c4f\u5e55 SDL_RenderClear(renderer); // \u7ed8\u5236\u4e00\u4e2a\u77e9\u5f62 SDL_Rect rect = {100, 100, 200, 150}; SDL_RenderFillRect(renderer, &rect); // \u66f4\u65b0\u5c4f\u5e55\u663e\u793a SDL_RenderPresent(renderer); // \u4e8b\u4ef6\u5904\u7406 bool quit = false; SDL_Event e; while (!quit) { while (SDL_PollEvent(&e) != 0) { if (e.type == SDL_QUIT) { quit = true; } } } // \u91ca\u653e\u8d44\u6e90\u5e76\u9000\u51fa SDL_DestroyRenderer(renderer); SDL_DestroyWindow(window); SDL_Quit(); return 0; } \u4e0b\u4e00\u7ae0 CMakePresets.json\u6848\u4f8b","title":"\u6839\u636e\u524d\u7f00\u641c\u7d22"},{"location":"todo/","text":"\u8fd9\u90e8\u5206\u5185\u5bb9\u8fd8\u672a\u60f3\u597d...","title":"todo..."},{"location":"todo/#_1","text":"","title":"\u8fd9\u90e8\u5206\u5185\u5bb9\u8fd8\u672a\u60f3\u597d..."},{"location":"%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5/","text":"\u53c2\u8003\u6587\u6863 https://cliutils.gitlab.io/modern-cmake/README.html https://cmake.org/cmake/help/v3.20/index.html https://modern-cmake-cn.github.io/Modern-CMake-zh_CN/ https://xiazuomo.gitbook.io/modern-cmake-chinese/introduction https://ukabuer.me/blog/more-modern-cmake/ https://www.bilibili.com/video/BV1Mw411M761/ https://www.bilibili.com/video/BV16P4y1g7MH https://crascit.com/professional-cmake/ https://zh.wikipedia.org/wiki/CMake https://github.com/Mq-b/CXX_LIB https://bazel.build/basics?hl=zh-cn","title":"\u53c2\u8003\u6587\u6863"},{"location":"%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5/#_1","text":"https://cliutils.gitlab.io/modern-cmake/README.html https://cmake.org/cmake/help/v3.20/index.html https://modern-cmake-cn.github.io/Modern-CMake-zh_CN/ https://xiazuomo.gitbook.io/modern-cmake-chinese/introduction https://ukabuer.me/blog/more-modern-cmake/ https://www.bilibili.com/video/BV1Mw411M761/ https://www.bilibili.com/video/BV16P4y1g7MH https://crascit.com/professional-cmake/ https://zh.wikipedia.org/wiki/CMake https://github.com/Mq-b/CXX_LIB https://bazel.build/basics?hl=zh-cn","title":"\u53c2\u8003\u6587\u6863"},{"location":"%E5%91%BD%E4%BB%A4%E8%A1%8C/","text":"","title":"\u547d\u4ee4\u884c"},{"location":"%E5%91%BD%E4%BB%A4%E8%A1%8C/#_1","text":"","title":""},{"location":"%E5%9F%BA%E6%9C%AC%E5%B8%B8%E8%AF%86/","text":"\u57fa\u672c\u5e38\u8bc6 \u52a8\u6001\u5e93\u94fe\u63a5 \u5728 Windows \u4e0a\uff0c\u52a8\u6001\u5e93\u4f7f\u7528 .dll \u540e\u7f00\uff0c\u4f46\u7f16\u8bd1\u5668\u65e0\u6cd5\u76f4\u63a5\u94fe\u63a5 .dll \u6587\u4ef6\u3002\u901a\u5e38\uff0c\u6211\u4eec\u94fe\u63a5 .dll \u5bf9\u5e94\u7684 .lib \u6587\u4ef6\uff0c\u63d0\u4f9b\u7f16\u8bd1\u65f6\u7684\u5e93\u4fe1\u606f\u3002 \u5728 Linux \u4e0a\uff0c\u76f4\u63a5\u94fe\u63a5.so\u65e2\u53ef\u3002 \u8fd0\u884c\u65f6\u52a8\u6001\u5e93\u641c\u7d22\u8def\u5f84 \u8fd0\u884c\u65f6\u52a8\u6001\u5e93\u641c\u7d22\u8def\u5f84 Windows\uff1a\u52a8\u6001\u5e93\u5fc5\u987b\u4f4d\u4e8e\u7cfb\u7edf\u7684\u641c\u7d22\u8def\u5f84\u4e2d\u3002\u4e00\u822c\u901a\u8fc7\u73af\u5883\u53d8\u91cf PATH \u6307\u5b9a\uff0c\u6216\u8005\u76f4\u63a5\u653e\u5728\u53ef\u6267\u884c\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u3002 Linux\uff1a\u8fd0\u884c\u65f6\u52a8\u6001\u5e93\u4e00\u822c\u901a\u8fc7\u73af\u5883\u53d8\u91cf LD_LIBRARY_PATH \u67e5\u627e\uff0c\u786e\u4fdd\u52a8\u6001\u5e93\u5728\u6267\u884c\u65f6\u53ef\u88ab\u627e\u5230\u3002 \u751f\u6210\u5668 CMake\u652f\u6301\u591a\u79cd\u751f\u6210\u5668\u6765\u652f\u6301\u4e0d\u540c\u7684\u6784\u5efa\u7cfb\u7edf\uff0c\u9ed8\u8ba4\u7684\u751f\u6210\u5668\u662f(cmake --help \u8f93\u51fa\u4e2d\u5e26 * \u6807\u8bb0\u7684generator) \u53ef\u4ee5\u8bbe\u7f6e\u73af\u5883\u53d8\u91cfCMAKE_GENERATOR\u6765\u6539\u53d8\u9ed8\u8ba4\u751f\u6210\u5668(CMake 3.15+\uff09)\u3002 \u7f13\u5b58\u53d8\u91cf CMake \u652f\u6301\u7f13\u5b58\u53d8\u91cf\uff0c\u5b83\u4eec\u5b58\u50a8\u5728 \u6784\u5efa\u76ee\u5f55 \u4e2d\u7684 CMakeCache.txt \u6587\u4ef6\u4e2d\u3002\u8c03\u7528 CMake \u65f6\u4f7f\u7528 -D \u53c2\u6570\u4f20\u9012\u7684\u53d8\u91cf\u4f1a\u81ea\u52a8\u4f5c\u4e3a\u7f13\u5b58\u53d8\u91cf\u4fdd\u5b58\u3002 \u7f13\u5b58\u53d8\u91cf\u4e0e\u666e\u901a\u53d8\u91cf\u7684\u533a\u522b: \u666e\u901a\u53d8\u91cf\uff1a \u5b9a\u4e49\u5728 CMakeLists.txt \u4e2d\uff0c\u5177\u6709\u52a8\u6001\u4f5c\u7528\u57df\uff0c\u4ec5\u5728\u5f53\u524d CMakeLists.txt \u6216\u4f5c\u7528\u57df\u4e2d\u6709\u6548\u3002 \u7f13\u5b58\u53d8\u91cf\uff1a \u5168\u5c40\u53ef\u89c1\uff0c\u5b58\u5728\u4e8e\u6574\u4e2a CMake \u914d\u7f6e\u8fc7\u7a0b\u4e2d\uff0c\u5373\u4f7f CMakeLists.txt \u7684\u53d8\u91cf\u88ab\u4fee\u6539\uff0c\u7f13\u5b58\u53d8\u91cf\u7684\u503c\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0\uff0c\u9664\u975e\u5f3a\u5236\u4fee\u6539\u6216\u6e05\u9664\u7f13\u5b58\u3002 \u521b\u5efa\u7f13\u5b58\u53d8\u91cf\u7684\u65b9\u5f0f\uff1a \u901a\u8fc7\u547d\u4ee4\u884c -D \u53c2\u6570\uff1a cmake -DCMAKE_BUILD_TYPE=Release \u4f7f\u7528 option \u547d\u4ee4\u521b\u5efa\u5e03\u5c14\u7f13\u5b58\u53d8\u91cf option(ENABLE_FEATURE_A \"feature_a\" ON) \u4f7f\u7528 set \u547d\u4ee4\u6307\u5b9a\u7f13\u5b58\u7c7b\u578b\uff1a set(VAR \"value\" CACHE STRING \"\u6ce8\u91ca\") \u6ce8\u610f: \u7f13\u5b58\u53d8\u91cf\u4fee\u6539\u5fc5\u987b\u4f7f\u7528set\u7684\u5e26 FORCE \u7248\u672cset(VAR \"value\" CACHE STRING \"\u6ce8\u91ca\" FORCE) \u8bfb\u53d6\u7f13\u5b58\u53d8\u91cf\uff1a \u53ef\u80fd\u662f\u666e\u901a\u53d8\u91cf\uff0c ${VAR} \uff0c\u63a8\u8350 $CACHE{VAR} CMake\u914d\u7f6e\u7684\u591a\u79cd\u65b9\u5f0f \u4f7f\u7528\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4f5c\u4e3a\u6784\u5efa\u6811\uff0c\u4f7f\u7528 \u4f5c\u4e3a\u6e90\u4ee3\u7801\u76ee\u5f55\u3002 cmake [options] <path-to-source> # \u4e0d\u63a8\u8350, cmake . \u4f7f\u7528 \u4f5c\u4e3a\u6784\u5efa\u6811\uff0c\u5e76\u4ece\u5176 CMakeCache.txt \u6587\u4ef6\u52a0\u8f7d\u6e90\u6811\u7684\u8def\u5f84\u3002 cmake [options] <path-to-existing-build> # \u52a0\u8f7d\u5df2\u7ecf\u6784\u5efa\u4e86\u7684\u7f13\u5b58\uff0c\u5237\u65b0CMakeLists\u7684\u4fee\u6539, cmake build/ \u4f7f\u7528 \u4f5c\u4e3a\u6784\u5efa\u6811\uff0c\u4f7f\u7528 \u4f5c\u4e3a\u6e90\u6811(\u63a8\u8350)\u3002 \u5982\u679c\u4ec5\u7ed9\u51fa\u4e00\u79cd\u7c7b\u578b\u7684\u8def\u5f84\uff0c\u5219\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 (cwd) \u5c06\u7528\u4e8e\u53e6\u4e00\u79cd\u8def\u5f84\u3002\u4f8b\u5982\uff1a cmake [options] -S <path-to-source> -B <path-to-build> # \u65e0\u6b67\u4e49\uff0c cmake -S . -B build/ CMake\u6807\u8bc6\u7b26\u89c4\u5219 CMake\u547d\u4ee4\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 CMake \u4fdd\u7559\u4ee5\u4e0b\u6807\u8bc6\u7b26\uff08\u65e0\u8bba\u662f\u5927\u5199\u3001\u5c0f\u5199\u6216\u6df7\u5408\u5927\u5c0f\u5199\uff09\uff1a begin with CMAKE_ begin with _CMAKE_ begin with _ CMakeLists.txt \u5185\u6587\u4ef6\u8def\u5f84\u7684\u67e5\u627e\u89c4\u5219 \u8def\u5f84\u5206\u9694\u7b26\u7edf\u4e00\u4ee5 / \u5206\u9694\uff0ccmake\u4f1a\u81ea\u52a8\u5904\u7406\u3002 \\ \u9700\u8f6c\u4e49\uff0c\u5373 \\\\ \u3002 \u7edd\u5bf9\u8def\u5f84 \uff1a\u76f4\u63a5\u6309\u7167\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u5b9e\u9645\u8def\u5f84\u67e5\u627e\uff0c\u65e0\u9700\u4f9d\u8d56\u5f53\u524d\u76ee\u5f55()\u3002 \u76f8\u5bf9\u8def\u5f84 \uff1a \u4e00\u822c\u60c5\u51b5\u4e0b \uff1a\u76f8\u5bf9\u8def\u5f84\u662f\u76f8\u5bf9\u4e8e\u5f53\u524d CMakeLists.txt \u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u3002\u4f8b\u5982\uff0c add_executable() \u6216 add_library() \u7b49\u547d\u4ee4\u4f7f\u7528\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u90fd\u4f1a\u4ee5\u5f53\u524d CMakeLists.txt \u7684\u76ee\u5f55\u4f5c\u4e3a\u57fa\u51c6\u3002 \u7279\u6b8a\u60c5\u51b5 \uff1a\u5f53\u4f7f\u7528 include(script.cmake) \u6216 find_package() \u7b49\u547d\u4ee4\u65f6\uff0c\u8def\u5f84\u4f1a\u76f8\u5bf9\u4e8e\u8c03\u7528\u8fd9\u4e9b\u547d\u4ee4\u7684 CMakeLists.txt \u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\uff0c\u800c\u4e0d\u662f\u88ab\u5305\u542b\u7684\u811a\u672c\u6587\u4ef6\u3002 \u793a\u4f8b \u5047\u8bbe\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a project/ \u251c\u2500\u2500 CMakeLists.txt \u251c\u2500\u2500 src/ \u2502 \u251c\u2500\u2500 CMakeLists.txt \u2502 \u2514\u2500\u2500 main.cpp \u251c\u2500\u2500 scripts/ \u2502 \u2514\u2500\u2500 setup.cmake \u793a\u4f8b\u4ee3\u7801 \u9876\u5c42\u7684CMakeLists.txt \u4e2d\u7684\u76f8\u5bf9\u8def\u5f84 \uff1a cmake_minimum_required(VERSION 3.20) project(DemoProject) add_subdirectory(src) # project/ include(scripts/setup.cmake) # project/ src/CMakeLists.txt \u4e2d\u7684\u76f8\u5bf9\u8def\u5f84 \uff1a add_executable(app main.cpp) # project/src/ scripts/setup.cmake \u6587\u4ef6\u7684\u76f8\u5bf9\u8def\u5f84 message(\"\u6b63\u5728\u5904\u7406\u7684cmake\u6587\u4ef6\u8def\u5f84\uff1a ${CMAKE_CURRENT_LIST_DIR}\") # \u8f93\u51fa: project/scripts message(\"\u5f53\u524d\u6240\u5728\u7684CMakeLists\u6587\u4ef6\u8def\u5f84\uff1a ${CMAKE_CURRENT_SOURCE_DIR}\") # \u8f93\u51fa: project CMake \u53d8\u91cf\u7ec6\u5219 CMake \u7684\u53d8\u91cf\u7528\u6765\u5b58\u50a8\u503c\uff0c\u4f46\u6240\u6709\u503c\u90fd\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u3002\u5373\u4f7f\u770b\u8d77\u6765\u50cf\u6570\u5b57\u6216\u5e03\u5c14\u503c\uff0cCMake \u90fd\u4f1a\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u5b58\u50a8\u5b83\u4eec\u3002 set(VAR1 \"Hello, World!\") # \u8bbe\u7f6e\u53d8\u91cf VAR1 \u7684\u503c\u4e3a\u5b57\u7b26\u4e32 \"Hello, World!\" set(VAR2 42) # \u867d\u7136\u770b\u8d77\u6765\u662f\u6570\u5b57\uff0c\u4f46 CMake \u5c06 \"42\" \u5b58\u50a8\u4e3a\u5b57\u7b26\u4e32 set(VAR3 true) # \u540c\u6837\uff0c\"true\" \u4e5f\u662f\u5b57\u7b26\u4e32 \u53d8\u91cf\u5177\u6709\u52a8\u6001Block Scope(\u4f5c\u7528\u57df)\u3002 \u6bcf\u4e2a\u53d8\u91cf\u201cset\u201d\u6216\u201cunset\u201d\u90fd\u4f1a\u5728\u5f53\u524d\u4f5c\u7528\u57df\u4e2d\u521b\u5efa\u4e00\u4e2a\u7ed1\u5b9a,Block Scope\u7ed3\u675f\u5220\u9664\u7ed1\u5b9a\uff0c\u6bcf\u6b21\u521b\u5efa\u4f5c\u7528\u57df\u4f1a\u590d\u5236\u7236\u4f5c\u7528\u57df\u7684\u53d8\u91cf\u7ed1\u5b9a\u3002\u8fd9\u610f\u5473\u7740\u51fd\u6570\u5185\u90e8\u8bbe\u7f6e\u7684\u53d8\u91cf\u4e0d\u4f1a\u6e17\u900f\u5230\u7236\u4f5c\u7528\u57df\u4e2d\u3002 \u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u521b\u5efa\u65b0\u7684Block Scope: block() function() add_subdirectory() set\u547d\u4ee4\u8bed\u6cd5\uff1a set(<variable> <value>... [PARENT_SCOPE]) set\u4e5f\u53ef\u4ee5\u7684\u503c\u90fd\u662f\u5b57\u7b26\u4e32\uff0c\u8fd9\u91cc\u7684 ; \u5206\u5272\u7b26\u4e5f\u80fd\u4f7f\u7528foreach\u904d\u5386\u3002list\u4e5f\u662f\u5b57\u7b26\u4e32\u3002 set(myVar a b c) # myVar = \"a;b;c\" set(myVar a;b;c) # myVar = \"a;b;c\" set(myVar \"a b c\") # myVar = \"a b c\" set(myVar a b;c) # myVar = \"a;b;c\" set(myVar a \"b c\") # myVar = \"a;b c\" set(foo ab)# foo = \"ab\" set(bar ${foo}cd)# bar= \"abcd\" set(baz ${foo} cd)# baz= \"ab;cd\" set(myVar ba)# myVar = \"ba\" set(big \"${${myVar}r}ef\") # big = \"${bar}ef\" = \"abcdef\" set(${foo} xyz) # ab= \"xyz\" set(bar ${notSetVar})# bar = \"\" CMake set \u547d\u4ee4\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5173\u4e8e\u4f5c\u7528\u57df\u7684\u9009\u9879\uff0cPARENT_SCOPE \u5c06\u53d8\u91cf\u8bbe\u7f6e\u5230\u7236\u4f5c\u7528\u57df\u4e2d\uff0c\u800c\u4e0d\u662f\u5f53\u524d\u4f5c\u7528\u57df\u4e2d\u3002 \u53e6\u5916\uff0cCMake\u7f13\u5b58\u53d8\u91cf\u662f\u5177\u6709\u5168\u5c40\u4f5c\u7528\u57df\u7684,\u9664\u975e\u6307\u5b9a\u4e86 FORCE \u9009\u9879\uff0c\u5426\u5219 CACHE \u9009\u9879\u4e0d\u4f1a\u8bbe\u7f6e CACHE \u4e2d\u5df2\u5b58\u5728\u7684\u53d8\u91cf\uff0c\u5373 set(VAR \"value\" CACHE STRING \"\u6ce8\u91ca\" FORCE) \u3002 \u4e0e\u5927\u591a\u7f16\u7a0b\u8bed\u8a00\u4e0d\u540c\uff0cCMake \u7684\u5faa\u73af(if)\u548c\u63a7\u5236\u6d41(foreach\u3001while)\u6ca1\u6709\u81ea\u5df1\u7684\u4f5c\u7528\u57df\u3002","title":"\u57fa\u672c\u5e38\u8bc6"},{"location":"%E5%9F%BA%E6%9C%AC%E5%B8%B8%E8%AF%86/#_1","text":"","title":"\u57fa\u672c\u5e38\u8bc6"},{"location":"%E5%9F%BA%E6%9C%AC%E5%B8%B8%E8%AF%86/#_2","text":"\u5728 Windows \u4e0a\uff0c\u52a8\u6001\u5e93\u4f7f\u7528 .dll \u540e\u7f00\uff0c\u4f46\u7f16\u8bd1\u5668\u65e0\u6cd5\u76f4\u63a5\u94fe\u63a5 .dll \u6587\u4ef6\u3002\u901a\u5e38\uff0c\u6211\u4eec\u94fe\u63a5 .dll \u5bf9\u5e94\u7684 .lib \u6587\u4ef6\uff0c\u63d0\u4f9b\u7f16\u8bd1\u65f6\u7684\u5e93\u4fe1\u606f\u3002 \u5728 Linux \u4e0a\uff0c\u76f4\u63a5\u94fe\u63a5.so\u65e2\u53ef\u3002 \u8fd0\u884c\u65f6\u52a8\u6001\u5e93\u641c\u7d22\u8def\u5f84","title":"\u52a8\u6001\u5e93\u94fe\u63a5"},{"location":"%E5%9F%BA%E6%9C%AC%E5%B8%B8%E8%AF%86/#_3","text":"Windows\uff1a\u52a8\u6001\u5e93\u5fc5\u987b\u4f4d\u4e8e\u7cfb\u7edf\u7684\u641c\u7d22\u8def\u5f84\u4e2d\u3002\u4e00\u822c\u901a\u8fc7\u73af\u5883\u53d8\u91cf PATH \u6307\u5b9a\uff0c\u6216\u8005\u76f4\u63a5\u653e\u5728\u53ef\u6267\u884c\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u3002 Linux\uff1a\u8fd0\u884c\u65f6\u52a8\u6001\u5e93\u4e00\u822c\u901a\u8fc7\u73af\u5883\u53d8\u91cf LD_LIBRARY_PATH \u67e5\u627e\uff0c\u786e\u4fdd\u52a8\u6001\u5e93\u5728\u6267\u884c\u65f6\u53ef\u88ab\u627e\u5230\u3002","title":"\u8fd0\u884c\u65f6\u52a8\u6001\u5e93\u641c\u7d22\u8def\u5f84"},{"location":"%E5%9F%BA%E6%9C%AC%E5%B8%B8%E8%AF%86/#_4","text":"CMake\u652f\u6301\u591a\u79cd\u751f\u6210\u5668\u6765\u652f\u6301\u4e0d\u540c\u7684\u6784\u5efa\u7cfb\u7edf\uff0c\u9ed8\u8ba4\u7684\u751f\u6210\u5668\u662f(cmake --help \u8f93\u51fa\u4e2d\u5e26 * \u6807\u8bb0\u7684generator) \u53ef\u4ee5\u8bbe\u7f6e\u73af\u5883\u53d8\u91cfCMAKE_GENERATOR\u6765\u6539\u53d8\u9ed8\u8ba4\u751f\u6210\u5668(CMake 3.15+\uff09)\u3002","title":"\u751f\u6210\u5668"},{"location":"%E5%9F%BA%E6%9C%AC%E5%B8%B8%E8%AF%86/#_5","text":"CMake \u652f\u6301\u7f13\u5b58\u53d8\u91cf\uff0c\u5b83\u4eec\u5b58\u50a8\u5728 \u6784\u5efa\u76ee\u5f55 \u4e2d\u7684 CMakeCache.txt \u6587\u4ef6\u4e2d\u3002\u8c03\u7528 CMake \u65f6\u4f7f\u7528 -D \u53c2\u6570\u4f20\u9012\u7684\u53d8\u91cf\u4f1a\u81ea\u52a8\u4f5c\u4e3a\u7f13\u5b58\u53d8\u91cf\u4fdd\u5b58\u3002 \u7f13\u5b58\u53d8\u91cf\u4e0e\u666e\u901a\u53d8\u91cf\u7684\u533a\u522b: \u666e\u901a\u53d8\u91cf\uff1a \u5b9a\u4e49\u5728 CMakeLists.txt \u4e2d\uff0c\u5177\u6709\u52a8\u6001\u4f5c\u7528\u57df\uff0c\u4ec5\u5728\u5f53\u524d CMakeLists.txt \u6216\u4f5c\u7528\u57df\u4e2d\u6709\u6548\u3002 \u7f13\u5b58\u53d8\u91cf\uff1a \u5168\u5c40\u53ef\u89c1\uff0c\u5b58\u5728\u4e8e\u6574\u4e2a CMake \u914d\u7f6e\u8fc7\u7a0b\u4e2d\uff0c\u5373\u4f7f CMakeLists.txt \u7684\u53d8\u91cf\u88ab\u4fee\u6539\uff0c\u7f13\u5b58\u53d8\u91cf\u7684\u503c\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0\uff0c\u9664\u975e\u5f3a\u5236\u4fee\u6539\u6216\u6e05\u9664\u7f13\u5b58\u3002 \u521b\u5efa\u7f13\u5b58\u53d8\u91cf\u7684\u65b9\u5f0f\uff1a \u901a\u8fc7\u547d\u4ee4\u884c -D \u53c2\u6570\uff1a cmake -DCMAKE_BUILD_TYPE=Release \u4f7f\u7528 option \u547d\u4ee4\u521b\u5efa\u5e03\u5c14\u7f13\u5b58\u53d8\u91cf option(ENABLE_FEATURE_A \"feature_a\" ON) \u4f7f\u7528 set \u547d\u4ee4\u6307\u5b9a\u7f13\u5b58\u7c7b\u578b\uff1a set(VAR \"value\" CACHE STRING \"\u6ce8\u91ca\") \u6ce8\u610f: \u7f13\u5b58\u53d8\u91cf\u4fee\u6539\u5fc5\u987b\u4f7f\u7528set\u7684\u5e26 FORCE \u7248\u672cset(VAR \"value\" CACHE STRING \"\u6ce8\u91ca\" FORCE) \u8bfb\u53d6\u7f13\u5b58\u53d8\u91cf\uff1a \u53ef\u80fd\u662f\u666e\u901a\u53d8\u91cf\uff0c ${VAR} \uff0c\u63a8\u8350 $CACHE{VAR}","title":"\u7f13\u5b58\u53d8\u91cf"},{"location":"%E5%9F%BA%E6%9C%AC%E5%B8%B8%E8%AF%86/#cmake","text":"\u4f7f\u7528\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4f5c\u4e3a\u6784\u5efa\u6811\uff0c\u4f7f\u7528 \u4f5c\u4e3a\u6e90\u4ee3\u7801\u76ee\u5f55\u3002 cmake [options] <path-to-source> # \u4e0d\u63a8\u8350, cmake . \u4f7f\u7528 \u4f5c\u4e3a\u6784\u5efa\u6811\uff0c\u5e76\u4ece\u5176 CMakeCache.txt \u6587\u4ef6\u52a0\u8f7d\u6e90\u6811\u7684\u8def\u5f84\u3002 cmake [options] <path-to-existing-build> # \u52a0\u8f7d\u5df2\u7ecf\u6784\u5efa\u4e86\u7684\u7f13\u5b58\uff0c\u5237\u65b0CMakeLists\u7684\u4fee\u6539, cmake build/ \u4f7f\u7528 \u4f5c\u4e3a\u6784\u5efa\u6811\uff0c\u4f7f\u7528 \u4f5c\u4e3a\u6e90\u6811(\u63a8\u8350)\u3002 \u5982\u679c\u4ec5\u7ed9\u51fa\u4e00\u79cd\u7c7b\u578b\u7684\u8def\u5f84\uff0c\u5219\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 (cwd) \u5c06\u7528\u4e8e\u53e6\u4e00\u79cd\u8def\u5f84\u3002\u4f8b\u5982\uff1a cmake [options] -S <path-to-source> -B <path-to-build> # \u65e0\u6b67\u4e49\uff0c cmake -S . -B build/","title":"CMake\u914d\u7f6e\u7684\u591a\u79cd\u65b9\u5f0f"},{"location":"%E5%9F%BA%E6%9C%AC%E5%B8%B8%E8%AF%86/#cmake_1","text":"CMake\u547d\u4ee4\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 CMake \u4fdd\u7559\u4ee5\u4e0b\u6807\u8bc6\u7b26\uff08\u65e0\u8bba\u662f\u5927\u5199\u3001\u5c0f\u5199\u6216\u6df7\u5408\u5927\u5c0f\u5199\uff09\uff1a begin with CMAKE_ begin with _CMAKE_ begin with _","title":"CMake\u6807\u8bc6\u7b26\u89c4\u5219"},{"location":"%E5%9F%BA%E6%9C%AC%E5%B8%B8%E8%AF%86/#cmakeliststxt","text":"\u8def\u5f84\u5206\u9694\u7b26\u7edf\u4e00\u4ee5 / \u5206\u9694\uff0ccmake\u4f1a\u81ea\u52a8\u5904\u7406\u3002 \\ \u9700\u8f6c\u4e49\uff0c\u5373 \\\\ \u3002 \u7edd\u5bf9\u8def\u5f84 \uff1a\u76f4\u63a5\u6309\u7167\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u5b9e\u9645\u8def\u5f84\u67e5\u627e\uff0c\u65e0\u9700\u4f9d\u8d56\u5f53\u524d\u76ee\u5f55()\u3002 \u76f8\u5bf9\u8def\u5f84 \uff1a \u4e00\u822c\u60c5\u51b5\u4e0b \uff1a\u76f8\u5bf9\u8def\u5f84\u662f\u76f8\u5bf9\u4e8e\u5f53\u524d CMakeLists.txt \u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u3002\u4f8b\u5982\uff0c add_executable() \u6216 add_library() \u7b49\u547d\u4ee4\u4f7f\u7528\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u90fd\u4f1a\u4ee5\u5f53\u524d CMakeLists.txt \u7684\u76ee\u5f55\u4f5c\u4e3a\u57fa\u51c6\u3002 \u7279\u6b8a\u60c5\u51b5 \uff1a\u5f53\u4f7f\u7528 include(script.cmake) \u6216 find_package() \u7b49\u547d\u4ee4\u65f6\uff0c\u8def\u5f84\u4f1a\u76f8\u5bf9\u4e8e\u8c03\u7528\u8fd9\u4e9b\u547d\u4ee4\u7684 CMakeLists.txt \u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\uff0c\u800c\u4e0d\u662f\u88ab\u5305\u542b\u7684\u811a\u672c\u6587\u4ef6\u3002","title":"CMakeLists.txt \u5185\u6587\u4ef6\u8def\u5f84\u7684\u67e5\u627e\u89c4\u5219"},{"location":"%E5%9F%BA%E6%9C%AC%E5%B8%B8%E8%AF%86/#_6","text":"\u5047\u8bbe\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a project/ \u251c\u2500\u2500 CMakeLists.txt \u251c\u2500\u2500 src/ \u2502 \u251c\u2500\u2500 CMakeLists.txt \u2502 \u2514\u2500\u2500 main.cpp \u251c\u2500\u2500 scripts/ \u2502 \u2514\u2500\u2500 setup.cmake","title":"\u793a\u4f8b"},{"location":"%E5%9F%BA%E6%9C%AC%E5%B8%B8%E8%AF%86/#_7","text":"\u9876\u5c42\u7684CMakeLists.txt \u4e2d\u7684\u76f8\u5bf9\u8def\u5f84 \uff1a cmake_minimum_required(VERSION 3.20) project(DemoProject) add_subdirectory(src) # project/ include(scripts/setup.cmake) # project/ src/CMakeLists.txt \u4e2d\u7684\u76f8\u5bf9\u8def\u5f84 \uff1a add_executable(app main.cpp) # project/src/ scripts/setup.cmake \u6587\u4ef6\u7684\u76f8\u5bf9\u8def\u5f84 message(\"\u6b63\u5728\u5904\u7406\u7684cmake\u6587\u4ef6\u8def\u5f84\uff1a ${CMAKE_CURRENT_LIST_DIR}\") # \u8f93\u51fa: project/scripts message(\"\u5f53\u524d\u6240\u5728\u7684CMakeLists\u6587\u4ef6\u8def\u5f84\uff1a ${CMAKE_CURRENT_SOURCE_DIR}\") # \u8f93\u51fa: project","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"%E5%9F%BA%E6%9C%AC%E5%B8%B8%E8%AF%86/#cmake_2","text":"CMake \u7684\u53d8\u91cf\u7528\u6765\u5b58\u50a8\u503c\uff0c\u4f46\u6240\u6709\u503c\u90fd\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u3002\u5373\u4f7f\u770b\u8d77\u6765\u50cf\u6570\u5b57\u6216\u5e03\u5c14\u503c\uff0cCMake \u90fd\u4f1a\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u5b58\u50a8\u5b83\u4eec\u3002 set(VAR1 \"Hello, World!\") # \u8bbe\u7f6e\u53d8\u91cf VAR1 \u7684\u503c\u4e3a\u5b57\u7b26\u4e32 \"Hello, World!\" set(VAR2 42) # \u867d\u7136\u770b\u8d77\u6765\u662f\u6570\u5b57\uff0c\u4f46 CMake \u5c06 \"42\" \u5b58\u50a8\u4e3a\u5b57\u7b26\u4e32 set(VAR3 true) # \u540c\u6837\uff0c\"true\" \u4e5f\u662f\u5b57\u7b26\u4e32 \u53d8\u91cf\u5177\u6709\u52a8\u6001Block Scope(\u4f5c\u7528\u57df)\u3002 \u6bcf\u4e2a\u53d8\u91cf\u201cset\u201d\u6216\u201cunset\u201d\u90fd\u4f1a\u5728\u5f53\u524d\u4f5c\u7528\u57df\u4e2d\u521b\u5efa\u4e00\u4e2a\u7ed1\u5b9a,Block Scope\u7ed3\u675f\u5220\u9664\u7ed1\u5b9a\uff0c\u6bcf\u6b21\u521b\u5efa\u4f5c\u7528\u57df\u4f1a\u590d\u5236\u7236\u4f5c\u7528\u57df\u7684\u53d8\u91cf\u7ed1\u5b9a\u3002\u8fd9\u610f\u5473\u7740\u51fd\u6570\u5185\u90e8\u8bbe\u7f6e\u7684\u53d8\u91cf\u4e0d\u4f1a\u6e17\u900f\u5230\u7236\u4f5c\u7528\u57df\u4e2d\u3002 \u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u521b\u5efa\u65b0\u7684Block Scope: block() function() add_subdirectory() set\u547d\u4ee4\u8bed\u6cd5\uff1a set(<variable> <value>... [PARENT_SCOPE]) set\u4e5f\u53ef\u4ee5\u7684\u503c\u90fd\u662f\u5b57\u7b26\u4e32\uff0c\u8fd9\u91cc\u7684 ; \u5206\u5272\u7b26\u4e5f\u80fd\u4f7f\u7528foreach\u904d\u5386\u3002list\u4e5f\u662f\u5b57\u7b26\u4e32\u3002 set(myVar a b c) # myVar = \"a;b;c\" set(myVar a;b;c) # myVar = \"a;b;c\" set(myVar \"a b c\") # myVar = \"a b c\" set(myVar a b;c) # myVar = \"a;b;c\" set(myVar a \"b c\") # myVar = \"a;b c\" set(foo ab)# foo = \"ab\" set(bar ${foo}cd)# bar= \"abcd\" set(baz ${foo} cd)# baz= \"ab;cd\" set(myVar ba)# myVar = \"ba\" set(big \"${${myVar}r}ef\") # big = \"${bar}ef\" = \"abcdef\" set(${foo} xyz) # ab= \"xyz\" set(bar ${notSetVar})# bar = \"\" CMake set \u547d\u4ee4\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5173\u4e8e\u4f5c\u7528\u57df\u7684\u9009\u9879\uff0cPARENT_SCOPE \u5c06\u53d8\u91cf\u8bbe\u7f6e\u5230\u7236\u4f5c\u7528\u57df\u4e2d\uff0c\u800c\u4e0d\u662f\u5f53\u524d\u4f5c\u7528\u57df\u4e2d\u3002 \u53e6\u5916\uff0cCMake\u7f13\u5b58\u53d8\u91cf\u662f\u5177\u6709\u5168\u5c40\u4f5c\u7528\u57df\u7684,\u9664\u975e\u6307\u5b9a\u4e86 FORCE \u9009\u9879\uff0c\u5426\u5219 CACHE \u9009\u9879\u4e0d\u4f1a\u8bbe\u7f6e CACHE \u4e2d\u5df2\u5b58\u5728\u7684\u53d8\u91cf\uff0c\u5373 set(VAR \"value\" CACHE STRING \"\u6ce8\u91ca\" FORCE) \u3002 \u4e0e\u5927\u591a\u7f16\u7a0b\u8bed\u8a00\u4e0d\u540c\uff0cCMake \u7684\u5faa\u73af(if)\u548c\u63a7\u5236\u6d41(foreach\u3001while)\u6ca1\u6709\u81ea\u5df1\u7684\u4f5c\u7528\u57df\u3002","title":"CMake \u53d8\u91cf\u7ec6\u5219"},{"location":"%E6%99%AE%E9%80%9ACMake%E9%A1%B9%E7%9B%AE/","text":"\u666e\u901aCMake\u9879\u76ee","title":"\u666e\u901aCMake\u9879\u76ee"},{"location":"%E6%99%AE%E9%80%9ACMake%E9%A1%B9%E7%9B%AE/#cmake","text":"","title":"\u666e\u901aCMake\u9879\u76ee"},{"location":"%E6%9C%80%E5%B0%8F%E6%9E%84%E5%BB%BA/","text":"\u6700\u5c0f\u7684CMakeLists\u6848\u4f8b \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4ece\u96f6\u5f00\u59cb\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 C++ \u9879\u76ee\uff0c\u5c55\u793a\u5982\u4f55\u4f7f\u7528 CMake \u6784\u5efa\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u51c6\u5907\u6e90\u4ee3\u7801\u4e0e\u914d\u7f6e\u6587\u4ef6 \u521b\u5efa main.cpp \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a // main.cpp #include <iostream> int main(){ puts(\"hello cmake\"); } \u63a5\u4e0b\u6765\uff0c\u5728\u9879\u76ee\u76ee\u5f55\u4e0b\u521b\u5efa CMakeLists.txt \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a # \u8bbe\u7f6e CMake \u7684\u6700\u4f4e\u7248\u672c cmake_minimum_required(VERSION 3.20) # \u8bbe\u7f6e\u9879\u76ee\u540d\u79f0 project(MinimalCMakeProject) # \u5b9a\u4e49\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6 # \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u76ee\u6807\u540d\u79f0\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u6e90\u6587\u4ef6\u8def\u5f84 add_executable(hello_cmake main.cpp) \u914d\u7f6e\u9879\u76ee \u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\uff0c\u521b\u5efa\u4e00\u4e2a\u72ec\u7acb\u7684\u6784\u5efa\u76ee\u5f55(\u4e5f\u79f0\u4e3a\u6e90\u5916\u6784\u5efa)\u3002 \u4e3a\u4ec0\u4e48\u4f7f\u7528\u72ec\u7acb\u6784\u5efa\u76ee\u5f55\uff1f \u8fd9\u6837\u53ef\u4ee5\u5c06\u751f\u6210\u7684\u6784\u5efa\u6587\u4ef6\u4e0e\u6e90\u4ee3\u7801\u5206\u79bb\uff0c\u4fdd\u6301\u9879\u76ee\u76ee\u5f55\u6574\u6d01\uff0c\u4fbf\u4e8e\u7ba1\u7406\u3002 cmake -S . -B build -S . \u8868\u793a\u8ba9 CMake \u67e5\u627e\u5f53\u524d\u76ee\u5f55\u4e2d\u7684 CMakeLists.txt \u6587\u4ef6\uff0c -B build \u6307\u5b9a\u6784\u5efa\u6587\u4ef6\u5b58\u653e\u5728 build \u76ee\u5f55\u3002\u6267\u884c\u540e\uff0cCMake \u4f1a\u751f\u6210\u5e73\u53f0\u76f8\u5173\u7684\u6784\u5efa\u6587\u4ef6\u3002 \u6210\u529f\u540e\uff0c\u7ec8\u7aef\u5c06\u8f93\u51fa\u7c7b\u4f3c\u4ee5\u4e0b\u5185\u5bb9\uff1a awe@build$ cmake .. -- The C compiler identification is GNU 14.2.1 -- The CXX compiler identification is GNU 14.2.1 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /usr/bin/cc - skipped -- Detecting C compile features -- Detecting C compile features - done -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Check for working CXX compiler: /usr/bin/c++ - skipped -- Detecting CXX compile features -- Detecting CXX compile features - done -- Configuring done (0.5s) -- Generating done (0.0s) -- Build files have been written to: /home/awe/Desktop/code/node/Modern-CMake/examples/step1/build \u751f\u6210\u9879\u76ee \u5728CMakeLists.txt\u6240\u5728\u76ee\u5f55\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a cmake --build build \u6210\u529f\u540e\uff0c\u4f60\u5c06\u770b\u5230\u7c7b\u4f3c\u5982\u4e0b\u8f93\u51fa\uff1a awe@build$ cmake --build . [ 50%] Building CXX object CMakeFiles/hello_cmake.dir/main.cpp.o [100%] Linking CXX executable hello_cmake [100%] Built target hello_cmake \u7f16\u8bd1\u5b8c\u6210\u540e\uff0c\u53ef\u6267\u884c\u6587\u4ef6\u4f1a\u51fa\u73b0\u5728 build \u76ee\u5f55\u4e0b\uff0c\u8fd0\u884c\u5b83\uff1a ./build/hello_cmake \u6700\u7ec8\u53ef\u6267\u884c\u76ee\u5f55\u7ed3\u6784: awe@step1$ tree -L 2 . \u251c\u2500\u2500 build \u2502 \u251c\u2500\u2500 CMakeCache.txt \u2502 \u251c\u2500\u2500 CMakeFiles \u2502 \u251c\u2500\u2500 cmake_install.cmake \u2502 \u251c\u2500\u2500 hello_cmake \u2502 \u2514\u2500\u2500 Makefile \u251c\u2500\u2500 CMakeLists.txt \u2514\u2500\u2500 main.cpp \u4e3a\u4ec0\u4e48CMake\u6784\u5efa\u8fc7\u7a0b\u5206\u4e3a\u4e24\u6b65\uff1f \u914d\u7f6e\u9636\u6bb5 ( cmake -S . -B build )\uff1a\u914d\u7f6e\u9636\u6bb5\u53ea\u89e3\u6790\u9879\u76ee\u7ed3\u6784\u548c\u751f\u6210\u89c4\u5219\uff0c\u4e0d\u6267\u884c\u5b9e\u9645\u7684\u7f16\u8bd1\u5de5\u4f5c\u3002 \u914d\u7f6e\u9636\u6bb5,CMake\u4f1a\u89e3\u6790 CMakeLists.txt \u6587\u4ef6\uff0c\u751f\u6210\u9002\u5408\u5f53\u524d\u5e73\u53f0\u7684\u6784\u5efa\u6587\u4ef6\uff08\u5982 Makefile \u6216 Visual Studio \u5de5\u7a0b\u6587\u4ef6.sln\u7b49\uff1b\u5bf9\u4e8e\u73b0\u5728\u7684IDE,VS,CLion\u7b49\u90fd\u4f1a\u5728CMakeLists.txt\u6587\u4ef6\u66f4\u65b0\u540e(\u534a)\u81ea\u52a8\u914d\u7f6e\uff0c\u4e0d\u5fc5\u624b\u52a8\u5b8c\u6210\uff09\uff0c\u800c\u4e14\u914d\u7f6e\u8fc7\u7a0b\u662f\u6709\u7f13\u5b58\u7684,\u7b2c\u4e00\u6b21\u6784\u5efa\u540e\u7b2c\u4e8c\u6b21\u914d\u7f6e\u53ef\u4ee5,CMake build/ \u76f4\u63a5\u6307\u5b9a\u4e0a\u6b21\u6784\u5efa\u7684\u7f13\u5b58\uff0c\u6bcf\u6b21\u589e\u91cf\u66f4\u65b0`cmake build/ -DCMAKE_XXX=YYY`(\u4e0d\u4e0d\u8fc7\u8fd9\u4e9b\u6784\u5efa\u7f13\u5b58\u4e00\u822c\u4e5f\u4e0d\u80fd\u8fc1\u79fb\u5230\u5176\u4ed6\u76ee\u5f55\uff0ccmake\u65e0\u6cd5\u4fdd\u8bc1\u8fd9\u4e2a\uff09\u3002 \u751f\u6210\u9636\u6bb5 ( cmake --build build )\uff1a tips: cmake --build build -v \u53ef\u4ee5\u8f93\u51fa\u5177\u4f53\u7684\u7f16\u8bd1\u8fc7\u7a0b CMake\u4f7f\u7528\u7b2c\u4e00\u6b65\u751f\u6210\u7684\u6784\u5efa\u6587\u4ef6\uff0c\u901a\u8fc7\u6784\u5efa\u6587\u4ef6\u8c03\u7528\u5bf9\u5e94\u7684\u6784\u5efa\u5de5\u5177(msbuild\u3001make\u3001ninja)\u5b8c\u6210\u6784\u5efa\uff0c\u6784\u5efa\u5de5\u5177\u6765\u8c03\u7528\u5177\u4f53\u7684\u7f16\u8bd1\u5668\uff08\u5982 g++\u3001clang++ \u6216 cl.exe\uff09\u8fdb\u884c\u7f16\u8bd1\uff0c\u751f\u6210\u76ee\u6807\u6587\u4ef6\uff08\u5982\u53ef\u6267\u884c\u6587\u4ef6.exe\u6216\u5e93\uff09\u3002 CMake \u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\u7684\u5199\u4ec0\u4e48\uff1f CMake \u914d\u7f6e\u6587\u4ef6\u7684\u6838\u5fc3\u4f5c\u7528\u662f\u544a\u8bc9 CMake \u5982\u4f55\u5c06 \u6e90\u4ee3\u7801\u548c\u5e93\u6587\u4ef6 \u8f6c\u6362\u4e3a \u53ef\u6267\u884c\u6587\u4ef6\u6216\u5176\u4ed6\u76ee\u6807 \u3002 \u5728\u73b0\u4ee3 CMake \u4e2d\uff0c\u6784\u5efa\u7684\u6838\u5fc3\u662f Target \u3002Target \u53ef\u4ee5\u662f\u53ef\u6267\u884c\u6587\u4ef6\u3001\u5e93\u6587\u4ef6\uff0c\u751a\u81f3\u662f\u81ea\u5b9a\u4e49\u547d\u4ee4\u3002 \u4e00\u4e2a\u57fa\u672c\u7684\u7a0b\u5e8f\u81f3\u5c11\u6709\u4e00\u4e2a Target\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a # CMake\u8981\u6c42\u7b2c\u4e00\u884c\u5fc5\u987b\u662fcmake_minimum_required VERSION\u63a8\u83503.20\u8d77\u6b65\uff0c cmake_minimum_required(VERSION 3.20) # CMake\u89c4\u5b9a\u4e00\u4e2a\u9879\u76ee\u7684\u6839CMakeLists.txt\u5fc5\u987b\u8981\u6709\u9879\u76ee\u540d\u5b57\u3002 project(MinimalCMakeProject) add_executable(hello_cmake main.cpp) \u4e0a\u6587CMake\u547d\u4ee4\u8be6\u89e3 1. cmake_minimum_required \u63a8\u8350\u7248\u672c\uff1a \u4ece 3.20 \u8d77\u6b65\u3002 \u6b64\u547d\u4ee4\u4e0d\u4ec5\u8981\u6c42 CMake \u7684\u6700\u4f4e\u7248\u672c\uff0c\u8fd8\u4f1a\u8bbe\u5b9a\u7b56\u7565\u7248\u672c\u3002 \u7b49\u4ef7\u547d\u4ee4\uff1a cmake_policy(VERSION 3.20) CMake \u4e2d\u7684\u7b56\u7565\u7248\u672c\u7528\u4e8e\u5728\u591a\u4e2a\u7248\u672c\u4e4b\u95f4\u4fdd\u7559\u5411\u540e\u517c\u5bb9\u7684\u884c\u4e3a\u3002 2. project project \u547d\u4ee4\u53ef\u4ee5\u8bbe\u7f6e\u4ee5\u4e0b\u5185\u5bb9\uff1a VERSION : \u9879\u76ee\u7684\u7248\u672c\u53f7\u3002 DESCRIPTION : \u9879\u76ee\u7684\u63cf\u8ff0\u3002 HOMEPAGE_URL : \u9879\u76ee\u4e3b\u9875\u5730\u5740\u3002 LANGUAGES : \u9879\u76ee\u652f\u6301\u7684\u7f16\u7a0b\u8bed\u8a00\u3002 \u8c03\u7528 project \u540e\uff0c\u4f1a\u5b9a\u4e49\u4e00\u7cfb\u5217\u6709\u7528\u7684\u53d8\u91cf\uff0c\u4f8b\u5982\uff1a PROJECT_SOURCE_DIR : \u9879\u76ee\u6e90\u7801\u7684\u6839\u76ee\u5f55\u3002 <PROJECT-NAME>_SOURCE_DIR : \u5f53\u524d\u9879\u76ee\u7684\u6e90\u7801\u76ee\u5f55\u3002 \u6ce8\u610f\uff1a \u5982\u679c project \u4f4d\u4e8e\u9876\u5c42 CMakeLists.txt\uff08\u6839\u7ea7\u522b\uff09\uff0c\u4f1a\u8bbe\u7f6e\u4ee5\u4e0b\u53d8\u91cf\uff1a CMAKE_PROJECT_NAME : \u9876\u5c42\u9879\u76ee\u7684\u540d\u79f0\uff08\u4ec5\u6839\u9879\u76ee\u8bbe\u7f6e\uff09\u3002 PROJECT_NAME : \u5f53\u524d\u9879\u76ee\u7684\u540d\u79f0\uff08\u6700\u8fd1\u8c03\u7528\u7684 project \u547d\u4ee4\u8986\u76d6\u4e4b\u524d\u7684\u503c\uff09\u3002 \u4e0b\u4e00\u7ae0 find_package\u6848\u4f8b.md","title":"\u6700\u5c0f\u7684CMakeLists\u6848\u4f8b"},{"location":"%E6%9C%80%E5%B0%8F%E6%9E%84%E5%BB%BA/#cmakelists","text":"\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4ece\u96f6\u5f00\u59cb\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 C++ \u9879\u76ee\uff0c\u5c55\u793a\u5982\u4f55\u4f7f\u7528 CMake \u6784\u5efa\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u3002","title":"\u6700\u5c0f\u7684CMakeLists\u6848\u4f8b"},{"location":"%E6%9C%80%E5%B0%8F%E6%9E%84%E5%BB%BA/#_1","text":"\u521b\u5efa main.cpp \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a // main.cpp #include <iostream> int main(){ puts(\"hello cmake\"); } \u63a5\u4e0b\u6765\uff0c\u5728\u9879\u76ee\u76ee\u5f55\u4e0b\u521b\u5efa CMakeLists.txt \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a # \u8bbe\u7f6e CMake \u7684\u6700\u4f4e\u7248\u672c cmake_minimum_required(VERSION 3.20) # \u8bbe\u7f6e\u9879\u76ee\u540d\u79f0 project(MinimalCMakeProject) # \u5b9a\u4e49\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6 # \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u76ee\u6807\u540d\u79f0\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u6e90\u6587\u4ef6\u8def\u5f84 add_executable(hello_cmake main.cpp)","title":"\u51c6\u5907\u6e90\u4ee3\u7801\u4e0e\u914d\u7f6e\u6587\u4ef6"},{"location":"%E6%9C%80%E5%B0%8F%E6%9E%84%E5%BB%BA/#_2","text":"\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\uff0c\u521b\u5efa\u4e00\u4e2a\u72ec\u7acb\u7684\u6784\u5efa\u76ee\u5f55(\u4e5f\u79f0\u4e3a\u6e90\u5916\u6784\u5efa)\u3002 \u4e3a\u4ec0\u4e48\u4f7f\u7528\u72ec\u7acb\u6784\u5efa\u76ee\u5f55\uff1f \u8fd9\u6837\u53ef\u4ee5\u5c06\u751f\u6210\u7684\u6784\u5efa\u6587\u4ef6\u4e0e\u6e90\u4ee3\u7801\u5206\u79bb\uff0c\u4fdd\u6301\u9879\u76ee\u76ee\u5f55\u6574\u6d01\uff0c\u4fbf\u4e8e\u7ba1\u7406\u3002 cmake -S . -B build -S . \u8868\u793a\u8ba9 CMake \u67e5\u627e\u5f53\u524d\u76ee\u5f55\u4e2d\u7684 CMakeLists.txt \u6587\u4ef6\uff0c -B build \u6307\u5b9a\u6784\u5efa\u6587\u4ef6\u5b58\u653e\u5728 build \u76ee\u5f55\u3002\u6267\u884c\u540e\uff0cCMake \u4f1a\u751f\u6210\u5e73\u53f0\u76f8\u5173\u7684\u6784\u5efa\u6587\u4ef6\u3002 \u6210\u529f\u540e\uff0c\u7ec8\u7aef\u5c06\u8f93\u51fa\u7c7b\u4f3c\u4ee5\u4e0b\u5185\u5bb9\uff1a awe@build$ cmake .. -- The C compiler identification is GNU 14.2.1 -- The CXX compiler identification is GNU 14.2.1 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /usr/bin/cc - skipped -- Detecting C compile features -- Detecting C compile features - done -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Check for working CXX compiler: /usr/bin/c++ - skipped -- Detecting CXX compile features -- Detecting CXX compile features - done -- Configuring done (0.5s) -- Generating done (0.0s) -- Build files have been written to: /home/awe/Desktop/code/node/Modern-CMake/examples/step1/build","title":"\u914d\u7f6e\u9879\u76ee"},{"location":"%E6%9C%80%E5%B0%8F%E6%9E%84%E5%BB%BA/#_3","text":"\u5728CMakeLists.txt\u6240\u5728\u76ee\u5f55\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a cmake --build build \u6210\u529f\u540e\uff0c\u4f60\u5c06\u770b\u5230\u7c7b\u4f3c\u5982\u4e0b\u8f93\u51fa\uff1a awe@build$ cmake --build . [ 50%] Building CXX object CMakeFiles/hello_cmake.dir/main.cpp.o [100%] Linking CXX executable hello_cmake [100%] Built target hello_cmake \u7f16\u8bd1\u5b8c\u6210\u540e\uff0c\u53ef\u6267\u884c\u6587\u4ef6\u4f1a\u51fa\u73b0\u5728 build \u76ee\u5f55\u4e0b\uff0c\u8fd0\u884c\u5b83\uff1a ./build/hello_cmake \u6700\u7ec8\u53ef\u6267\u884c\u76ee\u5f55\u7ed3\u6784: awe@step1$ tree -L 2 . \u251c\u2500\u2500 build \u2502 \u251c\u2500\u2500 CMakeCache.txt \u2502 \u251c\u2500\u2500 CMakeFiles \u2502 \u251c\u2500\u2500 cmake_install.cmake \u2502 \u251c\u2500\u2500 hello_cmake \u2502 \u2514\u2500\u2500 Makefile \u251c\u2500\u2500 CMakeLists.txt \u2514\u2500\u2500 main.cpp","title":"\u751f\u6210\u9879\u76ee"},{"location":"%E6%9C%80%E5%B0%8F%E6%9E%84%E5%BB%BA/#cmake","text":"\u914d\u7f6e\u9636\u6bb5 ( cmake -S . -B build )\uff1a\u914d\u7f6e\u9636\u6bb5\u53ea\u89e3\u6790\u9879\u76ee\u7ed3\u6784\u548c\u751f\u6210\u89c4\u5219\uff0c\u4e0d\u6267\u884c\u5b9e\u9645\u7684\u7f16\u8bd1\u5de5\u4f5c\u3002 \u914d\u7f6e\u9636\u6bb5,CMake\u4f1a\u89e3\u6790 CMakeLists.txt \u6587\u4ef6\uff0c\u751f\u6210\u9002\u5408\u5f53\u524d\u5e73\u53f0\u7684\u6784\u5efa\u6587\u4ef6\uff08\u5982 Makefile \u6216 Visual Studio \u5de5\u7a0b\u6587\u4ef6.sln\u7b49\uff1b\u5bf9\u4e8e\u73b0\u5728\u7684IDE,VS,CLion\u7b49\u90fd\u4f1a\u5728CMakeLists.txt\u6587\u4ef6\u66f4\u65b0\u540e(\u534a)\u81ea\u52a8\u914d\u7f6e\uff0c\u4e0d\u5fc5\u624b\u52a8\u5b8c\u6210\uff09\uff0c\u800c\u4e14\u914d\u7f6e\u8fc7\u7a0b\u662f\u6709\u7f13\u5b58\u7684,\u7b2c\u4e00\u6b21\u6784\u5efa\u540e\u7b2c\u4e8c\u6b21\u914d\u7f6e\u53ef\u4ee5,CMake build/ \u76f4\u63a5\u6307\u5b9a\u4e0a\u6b21\u6784\u5efa\u7684\u7f13\u5b58\uff0c\u6bcf\u6b21\u589e\u91cf\u66f4\u65b0`cmake build/ -DCMAKE_XXX=YYY`(\u4e0d\u4e0d\u8fc7\u8fd9\u4e9b\u6784\u5efa\u7f13\u5b58\u4e00\u822c\u4e5f\u4e0d\u80fd\u8fc1\u79fb\u5230\u5176\u4ed6\u76ee\u5f55\uff0ccmake\u65e0\u6cd5\u4fdd\u8bc1\u8fd9\u4e2a\uff09\u3002 \u751f\u6210\u9636\u6bb5 ( cmake --build build )\uff1a tips: cmake --build build -v \u53ef\u4ee5\u8f93\u51fa\u5177\u4f53\u7684\u7f16\u8bd1\u8fc7\u7a0b CMake\u4f7f\u7528\u7b2c\u4e00\u6b65\u751f\u6210\u7684\u6784\u5efa\u6587\u4ef6\uff0c\u901a\u8fc7\u6784\u5efa\u6587\u4ef6\u8c03\u7528\u5bf9\u5e94\u7684\u6784\u5efa\u5de5\u5177(msbuild\u3001make\u3001ninja)\u5b8c\u6210\u6784\u5efa\uff0c\u6784\u5efa\u5de5\u5177\u6765\u8c03\u7528\u5177\u4f53\u7684\u7f16\u8bd1\u5668\uff08\u5982 g++\u3001clang++ \u6216 cl.exe\uff09\u8fdb\u884c\u7f16\u8bd1\uff0c\u751f\u6210\u76ee\u6807\u6587\u4ef6\uff08\u5982\u53ef\u6267\u884c\u6587\u4ef6.exe\u6216\u5e93\uff09\u3002","title":"\u4e3a\u4ec0\u4e48CMake\u6784\u5efa\u8fc7\u7a0b\u5206\u4e3a\u4e24\u6b65\uff1f"},{"location":"%E6%9C%80%E5%B0%8F%E6%9E%84%E5%BB%BA/#cmake_1","text":"CMake \u914d\u7f6e\u6587\u4ef6\u7684\u6838\u5fc3\u4f5c\u7528\u662f\u544a\u8bc9 CMake \u5982\u4f55\u5c06 \u6e90\u4ee3\u7801\u548c\u5e93\u6587\u4ef6 \u8f6c\u6362\u4e3a \u53ef\u6267\u884c\u6587\u4ef6\u6216\u5176\u4ed6\u76ee\u6807 \u3002 \u5728\u73b0\u4ee3 CMake \u4e2d\uff0c\u6784\u5efa\u7684\u6838\u5fc3\u662f Target \u3002Target \u53ef\u4ee5\u662f\u53ef\u6267\u884c\u6587\u4ef6\u3001\u5e93\u6587\u4ef6\uff0c\u751a\u81f3\u662f\u81ea\u5b9a\u4e49\u547d\u4ee4\u3002 \u4e00\u4e2a\u57fa\u672c\u7684\u7a0b\u5e8f\u81f3\u5c11\u6709\u4e00\u4e2a Target\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a # CMake\u8981\u6c42\u7b2c\u4e00\u884c\u5fc5\u987b\u662fcmake_minimum_required VERSION\u63a8\u83503.20\u8d77\u6b65\uff0c cmake_minimum_required(VERSION 3.20) # CMake\u89c4\u5b9a\u4e00\u4e2a\u9879\u76ee\u7684\u6839CMakeLists.txt\u5fc5\u987b\u8981\u6709\u9879\u76ee\u540d\u5b57\u3002 project(MinimalCMakeProject) add_executable(hello_cmake main.cpp) \u4e0a\u6587CMake\u547d\u4ee4\u8be6\u89e3","title":"CMake \u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\u7684\u5199\u4ec0\u4e48\uff1f"},{"location":"%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/","text":"CMake C++\u73af\u5883\u642d\u5efa C++\u7f16\u8bd1\u5668\u5b89\u88c5 \u672c\u6559\u7a0b\u4e3b\u8981\u8bb2\u89e3Windows\u4e0a\u7f16\u8bd1\u5668\u7684\u5b89\u88c5\uff0c\u4ec5\u4ecb\u7ecd\u4e0b\u9762\u4e09\u79cd\u5b89\u88c5\u65b9\u5f0f\uff1a 1. Visual Studio[\u63a8\u8350]\uff1a \u5b89\u88c5Visual Studio\u5e76\u52fe\u9009Desktop development with C++ VS install 2. Scoop(\u547d\u4ee4\u884c\u5b89\u88c5\u5de5\u5177): \u9996\u5148\u5728PowerShell\u6267\u884c scoop\u5b98\u7f51 \u7684\u811a\u672c\uff0c \u8fdb\u5165 winlibs \u7684\u641c\u7d22\u7ed3\u679c\u9875\u9762 \u968f\u610f\u9009\u62e9\u4e00\u4e2a\u5305\uff0c\u5e76\u5728PowerShell\u4e2d\u6267\u884c\u5bf9\u5e94\u7684\u5b89\u88c5\u547d\u4ee4\uff0c\u4f8b\u5982\u4e0b\u9762\u7684\u547d\u4ee4\uff1a \u6267\u884c\u8fd9\u91cc\u7684\u547d\u4ee4(scoop install main/mingw-winlibs)\u4f1a\u81ea\u52a8\u5c06\u7f16\u8bd1\u5668\u7684\u53ef\u6267\u884c\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u6dfb\u52a0\u8fdb\u73af\u5883\u53d8\u91cf\uff0c\u4f7f\u5f97PowerShell\u4e2d\u80fd\u591f\u76f4\u63a5\u4f7f\u7528g++\u3001gcc\u4e86\uff0c\u4ee5\u53caVScode\u7684\u63d2\u4ef6\u548cCMake\u80fd\u591f\u627e\u5230\u5bf9\u5e94\u8def\u5f84\u4e0b\u7684\u7f16\u8bd1\u5668\u3002 3. \u624b\u52a8\u5b89\u88c5 winlibs \uff1a \u63a8\u8350\u4e0b\u8f7d\u56fe\u4e2d\u7684\u538b\u7f29\u5305(\u4e5f\u53ef\u4ee5\u4e0b\u8f7d\u53f3\u8fb9\u7684\u4e0d\u5e26LLVM\u7684\u7248\u672c\uff0c\u4f53\u79ef\u66f4\u5c0f)\uff0c\u89e3\u538b\u540e\u628ag++.exe\u6240\u5728\u76ee\u5f55\u52a0\u5165\u73af\u5883\u53d8\u91cf\u65e2\u53ef CMake\u73af\u5883\u51c6\u5907\u548c\u63d2\u4ef6\u914d\u7f6e \u5b9e\u9645\u4e0a\u5f88\u591aIDE\u4e0a\u90fdCMake\u6709\u652f\u6301\uff0c\u5e38\u89c1\u7684\u5982\uff1aVScode\u3001Visual Studio\u3001Clion\uff0c \u5f53\u7136\u547d\u4ee4\u884c\u662f\u6700\u901a\u7528\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u90fd\u4e0d\u662f\u5fc5\u8981\u7684\uff0c\u53ea\u662f\u6709\u9ad8\u4eae\u548c\u8865\u5168\u4f1a\u66f4\u53cb\u597d\u3002 \u9996\u5148\u9700\u8981\u5b89\u88c5CMake \u5bf9\u4e8eVScode \u9700\u8981\u5b89\u88c5\u4e0b\u9762\u4e24\u4e2a\u63d2\u4ef6\uff0c\u652f\u6301\u9ad8\u4eae\u548c\u90e8\u5206\u8865\u5168 \u5b89\u88c5CMake\u63d2\u4ef6\u540e\u53ef\u80fd\u6ca1\u6709\u5b8c\u5168\u5c55\u793a\u72b6\u6001\u6761,\u9700\u8981\u5728.vscode/settings.json\u4e2d\u52a0\u4e0a \"cmake.options.> statusBarVisibility\": \"compact\" CMake Tools\u63d2\u4ef6\u7684\u5177\u4f53\u529f\u80fd \u5b89\u88c5CMake Tools\u540e\u72b6\u6001\u680f\u4f1a\u6709\u6211\u4eec\u5e38\u7528\u7684\u51e0\u4e2a\u529f\u80fd\uff0c\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u4e9b\u529f\u80fd\u5177\u4f53\u4f5c\u7528\u3002 \u6784\u5efa\u7c7b\u578b \u56fe\u4e2d[Debug]\u662f\u6307\u6784\u5efa\u7684\u65f6\u5019\u4f1a\u4f7f\u7528Debug\u4f5c\u4e3a\u6784\u5efa\u7c7b\u578b,\u53ef\u4ee5\u9009\u62e9\u7684\u6709Debug\u3001Release\u3001RelWithDebInfo \u548c MinSizeRel \u6784\u5efa\u7c7b\u578b\u4f1a\u5f71\u54cd\u4e0b\u9762\u7684\u5185\u5bb9(\u5f71\u54cd\u7684\u547d\u4ee4\u884c\u53c2\u6570\u4ee5GCC\u4e3a\u4f8b)\uff1a \u4f18\u5316\u7ea7\u522b: [-O1,-O2,-O3] \u53ef\u6267\u884c\u6587\u4ef6\u662f\u5426\u5305\u542b \u8c03\u8bd5\u4fe1\u606f : [-g] \u4ee3\u7801\u4e2dassert\u662f\u5426\u8d77\u4f5c\u7528: [-DNDEBUG] Debug: \u5e26\u6709Debug\u4fe1\u606f\uff0c\u652f\u6301\u65ad\u70b9 Release\uff1a\u6ca1\u6709Debug\u4fe1\u606f\uff0c\u4e0d\u652f\u6301\u65ad\u70b9\uff0c\u542f\u7528\u4ee3\u7801\u4f18\u5316(\u6027\u80fd)\u3002 RelWithDebInfo\uff1a\u542f\u7528\u4ee3\u7801\u4f18\u5316\uff0c\u5e26\u6709Debug\u4fe1\u606f\uff0c\u65ad\u70b9\u53ef\u80fd\u4e0d\u51c6 MinSizeRel\uff1a\u542f\u7528\u4ee3\u7801\u4f53\u79ef\u4f18\u5316 \u7f16\u8bd1\u5668\u5de5\u5177\u94fe \u56fe\u4e2d [GCC 14.2.1 x86_64] \u6307 CMake \u6784\u5efa\u4f7f\u7528\u7684\u7f16\u8bd1\u5668\u5de5\u5177\u94fe\uff0c\u53ef\u80fd\u7684\u9009\u62e9\u5305\u62ec\uff1a MSVC (Microsoft Visual C++) : Windows \u5e73\u53f0\u4e0b\u7684\u4e3b\u6d41\u7f16\u8bd1\u5668\uff0c\u901a\u5e38\u901a\u8fc7 Visual Studio \u6216 MSBuild \u5b89\u88c5\u3002 MinGW/MinGW-w64 : \u63d0\u4f9b GCC \u5de5\u5177\u94fe\u7684 Windows \u7248\u672c\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b89\u88c5 MinGW-w64\uff08\u4f8b\u5982 winlibs \uff09\u3002 Clang : \u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u73b0\u4ee3\u7f16\u8bd1\u5668\u3002 \u5de5\u5177\u94fe \u4e0d\u4ec5\u4ec5\u662f\u6307\u7f16\u8bd1\u5668\uff0c\u8fd8\u5305\u62ec\u6784\u5efa\u548c\u94fe\u63a5\u8fc7\u7a0b\u6240\u9700\u7684\u5176\u4ed6\u5de5\u5177\u548c\u914d\u7f6e\u3002 \u5de5\u5177\u94fe \u7f16\u8bd1\u5668\uff08Compiler\uff09: \u4f8b\u5982 g++\u3001cl.exe \u6216 clang++\uff0c\u7528\u4e8e\u5c06 C++ \u6e90\u4ee3\u7801\u7f16\u8bd1\u4e3a\u76ee\u6807\u6587\u4ef6\u3002 \u94fe\u63a5\u5668\uff08Linker\uff09: \u4f8b\u5982 ld \u6216 MSVC \u81ea\u5e26\u7684\u94fe\u63a5\u5de5\u5177\uff0c\u7528\u4e8e\u5c06\u76ee\u6807\u6587\u4ef6\u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6\u6216\u5e93\u3002 \u5f52\u6863\u5de5\u5177\uff08Archiver\uff09: \u4f8b\u5982 ar\uff0c\u7528\u4e8e\u751f\u6210\u548c\u7ba1\u7406\u9759\u6001\u5e93\u3002 \u8c03\u8bd5\u5668\uff08Debugger\uff09: \u4f8b\u5982 gdb \u6216 Visual Studio \u8c03\u8bd5\u5de5\u5177\uff0c\u7528\u4e8e\u8c03\u8bd5\u7a0b\u5e8f\u8fd0\u884c\u3002 \u6784\u5efa\u5de5\u5177\uff08Build Tools\uff09: \u4f8b\u5982 make \u6216 ninja\uff0c\u7528\u4e8e\u6267\u884c\u6784\u5efa\u89c4\u5219\u3002 \u9009\u62e9\u6784\u5efa\u76ee\u6807\u3001\u8c03\u8bd5\u3001\u8fd0\u884c \u6700\u5de6\u7684\u662f\u9009\u62e9\u6784\u5efa\u76ee\u6807\uff0c\u4e5f\u5c31\u662f\u9009\u62e9\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6(.exe)\uff0c\u6216\u8005\u6784\u5efa\u7684\u5176\u4ed6\u7c7b\u578b\u7684\u76ee\u6807 \u4e2d\u95f4\u7684\u662fdebug\u6a21\u5f0f\u8fd0\u884c\uff0c\u5f53\u4f7f\u7528Debug|RelWithDebInfo\u6a21\u5f0f\u6216\u8005\u6784\u5efa\u4e86\u5e26\u6709debug\u4fe1\u606f\u7684\u7a0b\u5e8f\u6709\u6548 \u6700\u53f3\u662f\u8fd0\u884c\uff0c\u76f4\u63a5\u8fd0\u884c \u4e0b\u4e00\u7ae0 \u73b0\u4ee3CMake\u7684\u6838\u5fc3\u6982\u5ff5","title":"CMake C++\u73af\u5883\u642d\u5efa"},{"location":"%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#cmake-c","text":"","title":"CMake C++\u73af\u5883\u642d\u5efa"},{"location":"%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#c","text":"\u672c\u6559\u7a0b\u4e3b\u8981\u8bb2\u89e3Windows\u4e0a\u7f16\u8bd1\u5668\u7684\u5b89\u88c5\uff0c\u4ec5\u4ecb\u7ecd\u4e0b\u9762\u4e09\u79cd\u5b89\u88c5\u65b9\u5f0f\uff1a","title":"C++\u7f16\u8bd1\u5668\u5b89\u88c5"},{"location":"%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#1-visual-studio","text":"\u5b89\u88c5Visual Studio\u5e76\u52fe\u9009Desktop development with C++ VS install","title":"1. Visual Studio[\u63a8\u8350]\uff1a"},{"location":"%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#2-scoop","text":"\u9996\u5148\u5728PowerShell\u6267\u884c scoop\u5b98\u7f51 \u7684\u811a\u672c\uff0c \u8fdb\u5165 winlibs \u7684\u641c\u7d22\u7ed3\u679c\u9875\u9762 \u968f\u610f\u9009\u62e9\u4e00\u4e2a\u5305\uff0c\u5e76\u5728PowerShell\u4e2d\u6267\u884c\u5bf9\u5e94\u7684\u5b89\u88c5\u547d\u4ee4\uff0c\u4f8b\u5982\u4e0b\u9762\u7684\u547d\u4ee4\uff1a \u6267\u884c\u8fd9\u91cc\u7684\u547d\u4ee4(scoop install main/mingw-winlibs)\u4f1a\u81ea\u52a8\u5c06\u7f16\u8bd1\u5668\u7684\u53ef\u6267\u884c\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u6dfb\u52a0\u8fdb\u73af\u5883\u53d8\u91cf\uff0c\u4f7f\u5f97PowerShell\u4e2d\u80fd\u591f\u76f4\u63a5\u4f7f\u7528g++\u3001gcc\u4e86\uff0c\u4ee5\u53caVScode\u7684\u63d2\u4ef6\u548cCMake\u80fd\u591f\u627e\u5230\u5bf9\u5e94\u8def\u5f84\u4e0b\u7684\u7f16\u8bd1\u5668\u3002","title":"2. Scoop(\u547d\u4ee4\u884c\u5b89\u88c5\u5de5\u5177):"},{"location":"%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#3-winlibs","text":"\u63a8\u8350\u4e0b\u8f7d\u56fe\u4e2d\u7684\u538b\u7f29\u5305(\u4e5f\u53ef\u4ee5\u4e0b\u8f7d\u53f3\u8fb9\u7684\u4e0d\u5e26LLVM\u7684\u7248\u672c\uff0c\u4f53\u79ef\u66f4\u5c0f)\uff0c\u89e3\u538b\u540e\u628ag++.exe\u6240\u5728\u76ee\u5f55\u52a0\u5165\u73af\u5883\u53d8\u91cf\u65e2\u53ef","title":"3. \u624b\u52a8\u5b89\u88c5winlibs\uff1a"},{"location":"%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#cmake","text":"\u5b9e\u9645\u4e0a\u5f88\u591aIDE\u4e0a\u90fdCMake\u6709\u652f\u6301\uff0c\u5e38\u89c1\u7684\u5982\uff1aVScode\u3001Visual Studio\u3001Clion\uff0c \u5f53\u7136\u547d\u4ee4\u884c\u662f\u6700\u901a\u7528\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u90fd\u4e0d\u662f\u5fc5\u8981\u7684\uff0c\u53ea\u662f\u6709\u9ad8\u4eae\u548c\u8865\u5168\u4f1a\u66f4\u53cb\u597d\u3002 \u9996\u5148\u9700\u8981\u5b89\u88c5CMake \u5bf9\u4e8eVScode \u9700\u8981\u5b89\u88c5\u4e0b\u9762\u4e24\u4e2a\u63d2\u4ef6\uff0c\u652f\u6301\u9ad8\u4eae\u548c\u90e8\u5206\u8865\u5168 \u5b89\u88c5CMake\u63d2\u4ef6\u540e\u53ef\u80fd\u6ca1\u6709\u5b8c\u5168\u5c55\u793a\u72b6\u6001\u6761,\u9700\u8981\u5728.vscode/settings.json\u4e2d\u52a0\u4e0a \"cmake.options.> statusBarVisibility\": \"compact\"","title":"CMake\u73af\u5883\u51c6\u5907\u548c\u63d2\u4ef6\u914d\u7f6e"},{"location":"%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#cmake-tools","text":"\u5b89\u88c5CMake Tools\u540e\u72b6\u6001\u680f\u4f1a\u6709\u6211\u4eec\u5e38\u7528\u7684\u51e0\u4e2a\u529f\u80fd\uff0c\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u4e9b\u529f\u80fd\u5177\u4f53\u4f5c\u7528\u3002","title":"CMake Tools\u63d2\u4ef6\u7684\u5177\u4f53\u529f\u80fd"},{"location":"%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#_1","text":"\u56fe\u4e2d[Debug]\u662f\u6307\u6784\u5efa\u7684\u65f6\u5019\u4f1a\u4f7f\u7528Debug\u4f5c\u4e3a\u6784\u5efa\u7c7b\u578b,\u53ef\u4ee5\u9009\u62e9\u7684\u6709Debug\u3001Release\u3001RelWithDebInfo \u548c MinSizeRel \u6784\u5efa\u7c7b\u578b\u4f1a\u5f71\u54cd\u4e0b\u9762\u7684\u5185\u5bb9(\u5f71\u54cd\u7684\u547d\u4ee4\u884c\u53c2\u6570\u4ee5GCC\u4e3a\u4f8b)\uff1a \u4f18\u5316\u7ea7\u522b: [-O1,-O2,-O3] \u53ef\u6267\u884c\u6587\u4ef6\u662f\u5426\u5305\u542b \u8c03\u8bd5\u4fe1\u606f : [-g] \u4ee3\u7801\u4e2dassert\u662f\u5426\u8d77\u4f5c\u7528: [-DNDEBUG] Debug: \u5e26\u6709Debug\u4fe1\u606f\uff0c\u652f\u6301\u65ad\u70b9 Release\uff1a\u6ca1\u6709Debug\u4fe1\u606f\uff0c\u4e0d\u652f\u6301\u65ad\u70b9\uff0c\u542f\u7528\u4ee3\u7801\u4f18\u5316(\u6027\u80fd)\u3002 RelWithDebInfo\uff1a\u542f\u7528\u4ee3\u7801\u4f18\u5316\uff0c\u5e26\u6709Debug\u4fe1\u606f\uff0c\u65ad\u70b9\u53ef\u80fd\u4e0d\u51c6 MinSizeRel\uff1a\u542f\u7528\u4ee3\u7801\u4f53\u79ef\u4f18\u5316","title":"\u6784\u5efa\u7c7b\u578b"},{"location":"%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#_2","text":"\u56fe\u4e2d [GCC 14.2.1 x86_64] \u6307 CMake \u6784\u5efa\u4f7f\u7528\u7684\u7f16\u8bd1\u5668\u5de5\u5177\u94fe\uff0c\u53ef\u80fd\u7684\u9009\u62e9\u5305\u62ec\uff1a MSVC (Microsoft Visual C++) : Windows \u5e73\u53f0\u4e0b\u7684\u4e3b\u6d41\u7f16\u8bd1\u5668\uff0c\u901a\u5e38\u901a\u8fc7 Visual Studio \u6216 MSBuild \u5b89\u88c5\u3002 MinGW/MinGW-w64 : \u63d0\u4f9b GCC \u5de5\u5177\u94fe\u7684 Windows \u7248\u672c\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b89\u88c5 MinGW-w64\uff08\u4f8b\u5982 winlibs \uff09\u3002 Clang : \u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u73b0\u4ee3\u7f16\u8bd1\u5668\u3002 \u5de5\u5177\u94fe \u4e0d\u4ec5\u4ec5\u662f\u6307\u7f16\u8bd1\u5668\uff0c\u8fd8\u5305\u62ec\u6784\u5efa\u548c\u94fe\u63a5\u8fc7\u7a0b\u6240\u9700\u7684\u5176\u4ed6\u5de5\u5177\u548c\u914d\u7f6e\u3002 \u5de5\u5177\u94fe \u7f16\u8bd1\u5668\uff08Compiler\uff09: \u4f8b\u5982 g++\u3001cl.exe \u6216 clang++\uff0c\u7528\u4e8e\u5c06 C++ \u6e90\u4ee3\u7801\u7f16\u8bd1\u4e3a\u76ee\u6807\u6587\u4ef6\u3002 \u94fe\u63a5\u5668\uff08Linker\uff09: \u4f8b\u5982 ld \u6216 MSVC \u81ea\u5e26\u7684\u94fe\u63a5\u5de5\u5177\uff0c\u7528\u4e8e\u5c06\u76ee\u6807\u6587\u4ef6\u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6\u6216\u5e93\u3002 \u5f52\u6863\u5de5\u5177\uff08Archiver\uff09: \u4f8b\u5982 ar\uff0c\u7528\u4e8e\u751f\u6210\u548c\u7ba1\u7406\u9759\u6001\u5e93\u3002 \u8c03\u8bd5\u5668\uff08Debugger\uff09: \u4f8b\u5982 gdb \u6216 Visual Studio \u8c03\u8bd5\u5de5\u5177\uff0c\u7528\u4e8e\u8c03\u8bd5\u7a0b\u5e8f\u8fd0\u884c\u3002 \u6784\u5efa\u5de5\u5177\uff08Build Tools\uff09: \u4f8b\u5982 make \u6216 ninja\uff0c\u7528\u4e8e\u6267\u884c\u6784\u5efa\u89c4\u5219\u3002","title":"\u7f16\u8bd1\u5668\u5de5\u5177\u94fe"},{"location":"%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#_3","text":"\u6700\u5de6\u7684\u662f\u9009\u62e9\u6784\u5efa\u76ee\u6807\uff0c\u4e5f\u5c31\u662f\u9009\u62e9\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6(.exe)\uff0c\u6216\u8005\u6784\u5efa\u7684\u5176\u4ed6\u7c7b\u578b\u7684\u76ee\u6807 \u4e2d\u95f4\u7684\u662fdebug\u6a21\u5f0f\u8fd0\u884c\uff0c\u5f53\u4f7f\u7528Debug|RelWithDebInfo\u6a21\u5f0f\u6216\u8005\u6784\u5efa\u4e86\u5e26\u6709debug\u4fe1\u606f\u7684\u7a0b\u5e8f\u6709\u6548 \u6700\u53f3\u662f\u8fd0\u884c\uff0c\u76f4\u63a5\u8fd0\u884c \u4e0b\u4e00\u7ae0 \u73b0\u4ee3CMake\u7684\u6838\u5fc3\u6982\u5ff5","title":"\u9009\u62e9\u6784\u5efa\u76ee\u6807\u3001\u8c03\u8bd5\u3001\u8fd0\u884c"},{"location":"%E7%8E%B0%E4%BB%A3CMake%E7%9A%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/","text":"\u73b0\u4ee3CMake\u7684\u6838\u5fc3\u6982\u5ff5 \u76ee\u6807 \u76ee\u6807\uff08Target\uff09 \u662f\u73b0\u4ee3CMake\u6700\u6838\u5fc3\u7684\u6982\u5ff5\u3002\u76ee\u6807\u4ee3\u8868\u4e86\u7531CMake\u6784\u5efa\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3001\u5e93\u548c\u81ea\u5b9a\u4e49\u547d\u4ee4\u3002\u6bcf\u4e2aadd_library\u3001add_executable\u548cadd_custom_target\u547d\u4ee4\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u76ee\u6807\u3002 \u6bcf\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u9644\u52a0\u5c5e\u6027\uff0c\u5c5e\u6027\u662f\u9644\u52a0\u5230\u7279\u5b9a\u5bf9\u8c61\u7684\u952e\u503c\u5bf9\u3002 \u76ee\u6807\u7684\u4e3b\u8981\u7279\u70b9 \u5168\u5c40\u4f5c\u7528\u57df\uff1a\u4e00\u65e6\u521b\u5efa\uff0c\u53ef\u5728\u9879\u76ee\u4e2d\u4efb\u4f55\u5730\u65b9\u5f15\u7528\u3002 \u81ea\u52a8\u6269\u5c55\u540d\uff1aCMake\u6839\u636e\u5e73\u53f0\u81ea\u52a8\u51b3\u5b9a\u6269\u5c55\u540d\uff08\u5982Windows\u4e0b\u53ef\u6267\u884c\u6587\u4ef6\u4e3a.exe\uff09\u3002 \u52a8\u6001\u67e5\u8be2\u4fee\u6539\uff1a\u53ef\u7528set_target_properties\u548cget_target_property\u52a8\u6001\u66f4\u65b0\u76ee\u6807\u5c5e\u6027\u3002 \u53ef\u6267\u884c\u6587\u4ef6\uff08Executable\uff09\uff1a \u901a\u8fc7add_executable\u547d\u4ee4\u521b\u5efa\u3002\u4f8b\u5982\uff0cadd_executable(my_app main.cpp)\u4f1a\u521b\u5efa\u4e00\u4e2a\u540d\u4e3amy_app\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5176\u6e90\u6587\u4ef6\u4e3amain.cpp\u3002 \u5e93\uff08Library\uff09\uff1a \u901a\u8fc7add_library\u547d\u4ee4\u521b\u5efa\u3002\u4f8b\u5982\uff0cadd_library(foo STATIC foo1.c foo2.c)\u4f1a\u521b\u5efa\u4e00\u4e2a\u540d\u4e3afoo\u7684\u9759\u6001\u5e93\uff0c\u5176\u6e90\u6587\u4ef6\u4e3afoo1.c\u548cfoo2.c\u3002 \u81ea\u5b9a\u4e49\u76ee\u6807\uff08Custom Target\uff09\uff1a \u901a\u8fc7add_custom_target\u547d\u4ee4\u521b\u5efa\uff0c\u7528\u4e8e\u6267\u884c\u81ea\u5b9a\u4e49\u7684\u6784\u5efa\u4efb\u52a1\u3002 \u4f7f\u7528\u8981\u6c42(Usage Requirements) \u5728 CMake \u4e2d\uff0c \u4f7f\u7528\u8981\u6c42 \uff08Usage Requirements\uff09\u4e5f\u53ef\u4ee5\u88ab\u79f0\u4f5c\u201c\u4f20\u64ad\u673a\u5236\u201d\uff0c\u5b83\u6307\u7684\u662f\u76ee\u6807\u5728\u6784\u5efa\u65f6\u7684\u8981\u6c42\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u8981\u6c42\u5982\u4f55\u4f20\u64ad\u7ed9\u5176\u4ed6\u94fe\u63a5\u5230\u8be5\u76ee\u6807\u7684\u76ee\u6807\u3002\u53ef\u4f9b\u9009\u62e9\u7684\u6709 PUBLIC \u3001 PRIVATE \u548c INTERFACE \u3002 \u5177\u4f53\u4f8b\u5b50: \u8be5\u4f8b\u5b50\u8868\u793a\u4efb\u4f55\u94fe\u63a5(target_link_libraries)\u5230\u76ee\u6807 foo \u7684\u76ee\u6807\u90fd\u4f1a\u81ea\u52a8\u5c06 foo \u7684\u6e90\u4ee3\u7801\u76ee\u5f55\u4f5c\u4e3a\u5305\u542b\u76ee\u5f55\uff0c\u5305\u62ec\u81ea\u8eab\u3002 add_library(foo foo.cpp) target_include_directories(foo PUBLIC \"${CMAKE_CURRENT_SOURCE_DIR}\") \u5bf9\u4e8e\u53e6\u5916\u4e24\u79cd \u4f7f\u7528\u8981\u6c42 : \u4f7f\u7528 PRIVATE \u65f6\uff0c\u53ea\u6709 foo \u76ee\u6807\u672c\u8eab \u4f1a \u5c06\u6e90\u4ee3\u7801\u76ee\u5f55\u4f5c\u4e3a\u5305\u542b\u76ee\u5f55\u3002\u5176\u4ed6\u94fe\u63a5\u5230 foo \u7684\u76ee\u6807 \u4e0d\u4f1a\u7ee7\u627f \u8fd9\u4e2a\u5305\u542b\u76ee\u5f55\u8bbe\u7f6e\u3002 \u4f7f\u7528 INTERFACE \u65f6\uff0cfoo \u672c\u8eab\u672c\u8eab \u4e0d\u4f1a \u5c06\u6e90\u4ee3\u7801\u76ee\u5f55\u4f5c\u4e3a\u5305\u542b\u76ee\u5f55\uff0c\u800c\u662f\u4e00\u4e2a\u4ec5\u4f9b\u94fe\u63a5\u7684\u76ee\u6807\u3002\u4f46\u662f\uff0c\u5176\u4ed6\u94fe\u63a5\u5230 foo \u7684\u76ee\u6807\u90fd\u4f1a\u81ea\u52a8\u7ee7\u627f foo \u8bbe\u7f6e\u7684\u5305\u542b\u76ee\u5f55\u3002 \u4e0b\u4e00\u7ae0 \u6700\u5c0f\u6784\u5efa.md","title":"\u73b0\u4ee3CMake\u7684\u6838\u5fc3\u6982\u5ff5"},{"location":"%E7%8E%B0%E4%BB%A3CMake%E7%9A%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/#cmake","text":"","title":"\u73b0\u4ee3CMake\u7684\u6838\u5fc3\u6982\u5ff5"},{"location":"%E7%8E%B0%E4%BB%A3CMake%E7%9A%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/#_1","text":"\u76ee\u6807\uff08Target\uff09 \u662f\u73b0\u4ee3CMake\u6700\u6838\u5fc3\u7684\u6982\u5ff5\u3002\u76ee\u6807\u4ee3\u8868\u4e86\u7531CMake\u6784\u5efa\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3001\u5e93\u548c\u81ea\u5b9a\u4e49\u547d\u4ee4\u3002\u6bcf\u4e2aadd_library\u3001add_executable\u548cadd_custom_target\u547d\u4ee4\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u76ee\u6807\u3002 \u6bcf\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u9644\u52a0\u5c5e\u6027\uff0c\u5c5e\u6027\u662f\u9644\u52a0\u5230\u7279\u5b9a\u5bf9\u8c61\u7684\u952e\u503c\u5bf9\u3002","title":"\u76ee\u6807"},{"location":"%E7%8E%B0%E4%BB%A3CMake%E7%9A%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/#_2","text":"\u5168\u5c40\u4f5c\u7528\u57df\uff1a\u4e00\u65e6\u521b\u5efa\uff0c\u53ef\u5728\u9879\u76ee\u4e2d\u4efb\u4f55\u5730\u65b9\u5f15\u7528\u3002 \u81ea\u52a8\u6269\u5c55\u540d\uff1aCMake\u6839\u636e\u5e73\u53f0\u81ea\u52a8\u51b3\u5b9a\u6269\u5c55\u540d\uff08\u5982Windows\u4e0b\u53ef\u6267\u884c\u6587\u4ef6\u4e3a.exe\uff09\u3002 \u52a8\u6001\u67e5\u8be2\u4fee\u6539\uff1a\u53ef\u7528set_target_properties\u548cget_target_property\u52a8\u6001\u66f4\u65b0\u76ee\u6807\u5c5e\u6027\u3002 \u53ef\u6267\u884c\u6587\u4ef6\uff08Executable\uff09\uff1a \u901a\u8fc7add_executable\u547d\u4ee4\u521b\u5efa\u3002\u4f8b\u5982\uff0cadd_executable(my_app main.cpp)\u4f1a\u521b\u5efa\u4e00\u4e2a\u540d\u4e3amy_app\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5176\u6e90\u6587\u4ef6\u4e3amain.cpp\u3002 \u5e93\uff08Library\uff09\uff1a \u901a\u8fc7add_library\u547d\u4ee4\u521b\u5efa\u3002\u4f8b\u5982\uff0cadd_library(foo STATIC foo1.c foo2.c)\u4f1a\u521b\u5efa\u4e00\u4e2a\u540d\u4e3afoo\u7684\u9759\u6001\u5e93\uff0c\u5176\u6e90\u6587\u4ef6\u4e3afoo1.c\u548cfoo2.c\u3002 \u81ea\u5b9a\u4e49\u76ee\u6807\uff08Custom Target\uff09\uff1a \u901a\u8fc7add_custom_target\u547d\u4ee4\u521b\u5efa\uff0c\u7528\u4e8e\u6267\u884c\u81ea\u5b9a\u4e49\u7684\u6784\u5efa\u4efb\u52a1\u3002","title":"\u76ee\u6807\u7684\u4e3b\u8981\u7279\u70b9"},{"location":"%E7%8E%B0%E4%BB%A3CMake%E7%9A%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/#usage-requirements","text":"\u5728 CMake \u4e2d\uff0c \u4f7f\u7528\u8981\u6c42 \uff08Usage Requirements\uff09\u4e5f\u53ef\u4ee5\u88ab\u79f0\u4f5c\u201c\u4f20\u64ad\u673a\u5236\u201d\uff0c\u5b83\u6307\u7684\u662f\u76ee\u6807\u5728\u6784\u5efa\u65f6\u7684\u8981\u6c42\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u8981\u6c42\u5982\u4f55\u4f20\u64ad\u7ed9\u5176\u4ed6\u94fe\u63a5\u5230\u8be5\u76ee\u6807\u7684\u76ee\u6807\u3002\u53ef\u4f9b\u9009\u62e9\u7684\u6709 PUBLIC \u3001 PRIVATE \u548c INTERFACE \u3002","title":"\u4f7f\u7528\u8981\u6c42(Usage Requirements)"},{"location":"%E7%8E%B0%E4%BB%A3CMake%E7%9A%84%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/#_3","text":"\u8be5\u4f8b\u5b50\u8868\u793a\u4efb\u4f55\u94fe\u63a5(target_link_libraries)\u5230\u76ee\u6807 foo \u7684\u76ee\u6807\u90fd\u4f1a\u81ea\u52a8\u5c06 foo \u7684\u6e90\u4ee3\u7801\u76ee\u5f55\u4f5c\u4e3a\u5305\u542b\u76ee\u5f55\uff0c\u5305\u62ec\u81ea\u8eab\u3002 add_library(foo foo.cpp) target_include_directories(foo PUBLIC \"${CMAKE_CURRENT_SOURCE_DIR}\") \u5bf9\u4e8e\u53e6\u5916\u4e24\u79cd \u4f7f\u7528\u8981\u6c42 : \u4f7f\u7528 PRIVATE \u65f6\uff0c\u53ea\u6709 foo \u76ee\u6807\u672c\u8eab \u4f1a \u5c06\u6e90\u4ee3\u7801\u76ee\u5f55\u4f5c\u4e3a\u5305\u542b\u76ee\u5f55\u3002\u5176\u4ed6\u94fe\u63a5\u5230 foo \u7684\u76ee\u6807 \u4e0d\u4f1a\u7ee7\u627f \u8fd9\u4e2a\u5305\u542b\u76ee\u5f55\u8bbe\u7f6e\u3002 \u4f7f\u7528 INTERFACE \u65f6\uff0cfoo \u672c\u8eab\u672c\u8eab \u4e0d\u4f1a \u5c06\u6e90\u4ee3\u7801\u76ee\u5f55\u4f5c\u4e3a\u5305\u542b\u76ee\u5f55\uff0c\u800c\u662f\u4e00\u4e2a\u4ec5\u4f9b\u94fe\u63a5\u7684\u76ee\u6807\u3002\u4f46\u662f\uff0c\u5176\u4ed6\u94fe\u63a5\u5230 foo \u7684\u76ee\u6807\u90fd\u4f1a\u81ea\u52a8\u7ee7\u627f foo \u8bbe\u7f6e\u7684\u5305\u542b\u76ee\u5f55\u3002 \u4e0b\u4e00\u7ae0 \u6700\u5c0f\u6784\u5efa.md","title":"\u5177\u4f53\u4f8b\u5b50:"},{"location":"%E8%AE%BE%E7%BD%AE%E7%9B%AE%E6%A0%87%E5%B1%9E%E6%80%A7/","text":"\u8bbe\u7f6e\u76ee\u6807\u5c5e\u6027 \u5728 CMake \u4e2d\uff0c\u6bcf\u4e2a add_executable \u6216 add_library \u76ee\u6807\u90fd\u6709\u4e00\u7cfb\u5217\u53ef\u914d\u7f6e\u7684\u5c5e\u6027\uff0c\u4f8b\u5982 \u8f93\u51fa\u76ee\u5f55\u3001\u6587\u4ef6\u540d\u3001\u6587\u4ef6\u540e\u7f00 \u7b49\u3002CMake \u63d0\u4f9b\u4e86 set_target_properties \u547d\u4ee4\uff0c\u7528\u4e8e\u4fee\u6539\u8fd9\u4e9b\u5c5e\u6027\uff0c\u4ee5\u6ee1\u8db3\u9879\u76ee\u7ec4\u7ec7\u9700\u6c42\u3002 \u5b8c\u6574\u76ee\u6807\u5c5e\u6027\u5217\u8868 (examples/step5/) \u793a\u4f8b\u89e3\u6790 \u5047\u8bbe\u6211\u4eec\u6709\u4ee5\u4e0b\u9879\u76ee\u7ed3\u6784\uff1a awe@project1$ tree . \u251c\u2500\u2500 CMakeLists.txt \u251c\u2500\u2500 foo.cpp \u251c\u2500\u2500 run.sh \u2514\u2500\u2500 test.cpp awe@project1$ cat run.sh rm build target -rf # \u5220\u9664\u7f13\u5b58\uff0c\u4fdd\u6301\u5e72\u51c0 cmake -S . -B build && cmake --build build -j 4 cmake_minimum_required(VERSION 3.20) project(project1) add_executable(main test.cpp) add_library(foo SHARED foo.cpp) add_library(foo-static STATIC foo.cpp) set_target_properties(foo PROPERTIES LIBRARY_OUTPUT_DIRECTORY ../target/lib/ LIBRARY_OUTPUT_NAME hello_foo SUFFIX .so.1 ) set_target_properties(foo-static PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ../target/lib/ LIBRARY_OUTPUT_NAME hello_foo-static SUFFIX .lib ) set_target_properties(main PROPERTIES RUNTIME_OUTPUT_DIRECTORY ../target/bin RUNTIME_OUTPUT_NAME project_main SUFFIX .exe ) \u8fd0\u884crun.sh\u7ed3\u679c\uff1a (base) awe@project1$ tree target/ target/ \u251c\u2500\u2500 bin \u2502 \u2514\u2500\u2500 project_main.exe \u2514\u2500\u2500 lib \u251c\u2500\u2500 libfoo-static.lib \u2514\u2500\u2500 libhello_foo.so.1 set_target_properties\uff1a \u7528\u4e8e\u8bbe\u7f6e\u76ee\u6807\u7684\u5c5e\u6027(\u8fd9\u4e9b\u5c5e\u6027\u90fd\u9700\u4e0e\u6dfb\u52a0\u76ee\u6807\u65f6\u76ee\u6807\u7684\u7c7b\u578b\u4e00\u4e00\u5bf9\u5e94\uff0c\u5426\u5219\u65e0\u6548\uff0c\u5c5e\u6027OUTPUT_NAME\u662f\u901a\u7528\u7684),\u6307\u5b9a\u76f8\u5bf9\u76ee\u5f55\u662f\u76f8\u5bf9\u4e8e\u8fd9\u4e2a\u76ee\u5f55 ${CMAKE_BINARY_DIR} \u3002 LIBRARY_OUTPUT_DIRECTORY\uff1a\u8bbe\u7f6e\u5171\u4eab\u5e93(.dll/.so)\u7684\u8f93\u51fa\u76ee\u5f55\u3002 ARCHIVE_OUTPUT_DIRECTORY\uff1a\u8bbe\u7f6e\u9759\u6001\u5e93(.lib/.a)\u7684\u8f93\u51fa\u76ee\u5f55\u3002 RUNTIME_OUTPUT_DIRECTORY\uff1a\u8bbe\u7f6e\u53ef\u6267\u884c\u6587\u4ef6(.exe)\u7684\u8f93\u51fa\u76ee\u5f55\u3002 LIBRARY_OUTPUT_NAME\uff1a\u8bbe\u7f6e\u5171\u4eab\u5e93(.dll/.so)\u548c\u9759\u6001\u5e93\u7684\u8f93\u51fa\u540d\u79f0\u3002 RUNTIME_OUTPUT_NAME\uff1a\u8bbe\u7f6e\u53ef\u6267\u884c\u6587\u4ef6(.exe)\u7684\u8f93\u51fa\u540d\u79f0\u3002 OUTPUT_NAME\uff1a\u8bbe\u7f6e\u4efb\u610f\u76ee\u6807\u7684\u8f93\u51fa\u540d\u79f0\u3002 SUFFIX\uff1a\u8986\u76d6\u9ed8\u8ba4\u7684\u540e\u7f00\u540d\u3002","title":"\u8bbe\u7f6e\u76ee\u6807\u5c5e\u6027"},{"location":"%E8%AE%BE%E7%BD%AE%E7%9B%AE%E6%A0%87%E5%B1%9E%E6%80%A7/#_1","text":"\u5728 CMake \u4e2d\uff0c\u6bcf\u4e2a add_executable \u6216 add_library \u76ee\u6807\u90fd\u6709\u4e00\u7cfb\u5217\u53ef\u914d\u7f6e\u7684\u5c5e\u6027\uff0c\u4f8b\u5982 \u8f93\u51fa\u76ee\u5f55\u3001\u6587\u4ef6\u540d\u3001\u6587\u4ef6\u540e\u7f00 \u7b49\u3002CMake \u63d0\u4f9b\u4e86 set_target_properties \u547d\u4ee4\uff0c\u7528\u4e8e\u4fee\u6539\u8fd9\u4e9b\u5c5e\u6027\uff0c\u4ee5\u6ee1\u8db3\u9879\u76ee\u7ec4\u7ec7\u9700\u6c42\u3002 \u5b8c\u6574\u76ee\u6807\u5c5e\u6027\u5217\u8868 (examples/step5/)","title":"\u8bbe\u7f6e\u76ee\u6807\u5c5e\u6027"},{"location":"%E8%AE%BE%E7%BD%AE%E7%9B%AE%E6%A0%87%E5%B1%9E%E6%80%A7/#_2","text":"\u5047\u8bbe\u6211\u4eec\u6709\u4ee5\u4e0b\u9879\u76ee\u7ed3\u6784\uff1a awe@project1$ tree . \u251c\u2500\u2500 CMakeLists.txt \u251c\u2500\u2500 foo.cpp \u251c\u2500\u2500 run.sh \u2514\u2500\u2500 test.cpp awe@project1$ cat run.sh rm build target -rf # \u5220\u9664\u7f13\u5b58\uff0c\u4fdd\u6301\u5e72\u51c0 cmake -S . -B build && cmake --build build -j 4 cmake_minimum_required(VERSION 3.20) project(project1) add_executable(main test.cpp) add_library(foo SHARED foo.cpp) add_library(foo-static STATIC foo.cpp) set_target_properties(foo PROPERTIES LIBRARY_OUTPUT_DIRECTORY ../target/lib/ LIBRARY_OUTPUT_NAME hello_foo SUFFIX .so.1 ) set_target_properties(foo-static PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ../target/lib/ LIBRARY_OUTPUT_NAME hello_foo-static SUFFIX .lib ) set_target_properties(main PROPERTIES RUNTIME_OUTPUT_DIRECTORY ../target/bin RUNTIME_OUTPUT_NAME project_main SUFFIX .exe )","title":"\u793a\u4f8b\u89e3\u6790"},{"location":"%E8%AE%BE%E7%BD%AE%E7%9B%AE%E6%A0%87%E5%B1%9E%E6%80%A7/#runsh","text":"(base) awe@project1$ tree target/ target/ \u251c\u2500\u2500 bin \u2502 \u2514\u2500\u2500 project_main.exe \u2514\u2500\u2500 lib \u251c\u2500\u2500 libfoo-static.lib \u2514\u2500\u2500 libhello_foo.so.1","title":"\u8fd0\u884crun.sh\u7ed3\u679c\uff1a"},{"location":"%E8%AE%BE%E7%BD%AE%E7%9B%AE%E6%A0%87%E5%B1%9E%E6%80%A7/#set_target_properties","text":"\u7528\u4e8e\u8bbe\u7f6e\u76ee\u6807\u7684\u5c5e\u6027(\u8fd9\u4e9b\u5c5e\u6027\u90fd\u9700\u4e0e\u6dfb\u52a0\u76ee\u6807\u65f6\u76ee\u6807\u7684\u7c7b\u578b\u4e00\u4e00\u5bf9\u5e94\uff0c\u5426\u5219\u65e0\u6548\uff0c\u5c5e\u6027OUTPUT_NAME\u662f\u901a\u7528\u7684),\u6307\u5b9a\u76f8\u5bf9\u76ee\u5f55\u662f\u76f8\u5bf9\u4e8e\u8fd9\u4e2a\u76ee\u5f55 ${CMAKE_BINARY_DIR} \u3002 LIBRARY_OUTPUT_DIRECTORY\uff1a\u8bbe\u7f6e\u5171\u4eab\u5e93(.dll/.so)\u7684\u8f93\u51fa\u76ee\u5f55\u3002 ARCHIVE_OUTPUT_DIRECTORY\uff1a\u8bbe\u7f6e\u9759\u6001\u5e93(.lib/.a)\u7684\u8f93\u51fa\u76ee\u5f55\u3002 RUNTIME_OUTPUT_DIRECTORY\uff1a\u8bbe\u7f6e\u53ef\u6267\u884c\u6587\u4ef6(.exe)\u7684\u8f93\u51fa\u76ee\u5f55\u3002 LIBRARY_OUTPUT_NAME\uff1a\u8bbe\u7f6e\u5171\u4eab\u5e93(.dll/.so)\u548c\u9759\u6001\u5e93\u7684\u8f93\u51fa\u540d\u79f0\u3002 RUNTIME_OUTPUT_NAME\uff1a\u8bbe\u7f6e\u53ef\u6267\u884c\u6587\u4ef6(.exe)\u7684\u8f93\u51fa\u540d\u79f0\u3002 OUTPUT_NAME\uff1a\u8bbe\u7f6e\u4efb\u610f\u76ee\u6807\u7684\u8f93\u51fa\u540d\u79f0\u3002 SUFFIX\uff1a\u8986\u76d6\u9ed8\u8ba4\u7684\u540e\u7f00\u540d\u3002","title":"set_target_properties\uff1a"}]}